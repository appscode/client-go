// Code generated by protoc-gen-go.
// source: client.proto
// DO NOT EDIT!

/*
Package v1beta1 is a generated protocol buffer package.

It is generated from these files:
	client.proto
	cluster.proto
	event.proto
	incident.proto
	metadata.proto

It has these top-level messages:
	KubeResource
	IcingaState
	CopyResourceRequest
	CopyResourceResponse
	ClientRequest
	NodeListResponse
	Node
	NamespaceListResponse
	Namespace
	SecretListResponse
	Secret
	JobListResponse
	Job
	PodListResponse
	Pod
	Container
	ServiceListResponse
	Service
	AppDescribeRequest
	AppDescribeResponse
	AppListResponse
	App
	ReplicationControllerListResponse
	ReplicationController
	ConfigMapListResponse
	ConfigMap
	ConfigMapDescribeRequest
	ConfigMapDescribeResponse
	SecretDescribeRequest
	SecretDescribeResponse
	Raw
	ClusterSettings
	Cluster
	ClusterDescribeRequest
	ClusterDescribeResponse
	ClusterListRequest
	ClusterListResponse
	ClusterCreateRequest
	ClusterScaleRequest
	ClusterDeleteRequest
	ClusterStartupScriptRequest
	ClusterStartupScriptResponse
	ClusterInstanceByIPRequest
	ClusterInstanceResponse
	ClusterClientConfigRequest
	ClusterClientConfigResponse
	ClusterClientContainerRequest
	ClusterInstanceListRequest
	ClusterInstance
	ClusterInstanceListResponse
	ClusterUpdateRequest
	ClusterUpgradeRequest
	EventRequest
	EventResponse
	Incident
	IncidentListRequest
	IncidentListResponse
	IncidentDescribeRequest
	IncidentDescribeResponse
	IncidentNotifyRequest
	IncidentEventCreateRequest
	RegionListRequest
	RegionListResponse
	ZoneListRequest
	ZoneListResponse
	BucketListRequest
	BucketListResponse
*/
package v1beta1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/appscodeapis/appscode/api"
import appscode_dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type KubeResource struct {
	Type      string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Cluster   string `protobuf:"bytes,4,opt,name=cluster" json:"cluster,omitempty"`
}

func (m *KubeResource) Reset()                    { *m = KubeResource{} }
func (m *KubeResource) String() string            { return proto.CompactTextString(m) }
func (*KubeResource) ProtoMessage()               {}
func (*KubeResource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type IcingaState struct {
	OK       int32 `protobuf:"varint,1,opt,name=OK" json:"OK,omitempty"`
	Warning  int32 `protobuf:"varint,2,opt,name=Warning" json:"Warning,omitempty"`
	Critical int32 `protobuf:"varint,3,opt,name=Critical" json:"Critical,omitempty"`
	Unknown  int32 `protobuf:"varint,4,opt,name=Unknown" json:"Unknown,omitempty"`
}

func (m *IcingaState) Reset()                    { *m = IcingaState{} }
func (m *IcingaState) String() string            { return proto.CompactTextString(m) }
func (*IcingaState) ProtoMessage()               {}
func (*IcingaState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CopyResourceRequest struct {
	Source      *KubeResource `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Destination *KubeResource `protobuf:"bytes,2,opt,name=destination" json:"destination,omitempty"`
}

func (m *CopyResourceRequest) Reset()                    { *m = CopyResourceRequest{} }
func (m *CopyResourceRequest) String() string            { return proto.CompactTextString(m) }
func (*CopyResourceRequest) ProtoMessage()               {}
func (*CopyResourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CopyResourceRequest) GetSource() *KubeResource {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *CopyResourceRequest) GetDestination() *KubeResource {
	if m != nil {
		return m.Destination
	}
	return nil
}

type CopyResourceResponse struct {
	Status *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *CopyResourceResponse) Reset()                    { *m = CopyResourceResponse{} }
func (m *CopyResourceResponse) String() string            { return proto.CompactTextString(m) }
func (*CopyResourceResponse) ProtoMessage()               {}
func (*CopyResourceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CopyResourceResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type ClientRequest struct {
	Cluster string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
}

func (m *ClientRequest) Reset()                    { *m = ClientRequest{} }
func (m *ClientRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientRequest) ProtoMessage()               {}
func (*ClientRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type NodeListResponse struct {
	Status *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Nodes  []*Node                 `protobuf:"bytes,2,rep,name=nodes" json:"nodes,omitempty"`
}

func (m *NodeListResponse) Reset()                    { *m = NodeListResponse{} }
func (m *NodeListResponse) String() string            { return proto.CompactTextString(m) }
func (*NodeListResponse) ProtoMessage()               {}
func (*NodeListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *NodeListResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *NodeListResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type Node struct {
	Name             string             `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ProviderId       string             `protobuf:"bytes,2,opt,name=provider_id,json=providerId" json:"provider_id,omitempty"`
	CreatedAt        int64              `protobuf:"varint,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Capacity         *Node_NodeCapacity `protobuf:"bytes,4,opt,name=capacity" json:"capacity,omitempty"`
	OsImage          string             `protobuf:"bytes,5,opt,name=os_image,json=osImage" json:"os_image,omitempty"`
	KernelVersion    string             `protobuf:"bytes,6,opt,name=kernel_version,json=kernelVersion" json:"kernel_version,omitempty"`
	ContainerRuntime string             `protobuf:"bytes,7,opt,name=container_runtime,json=containerRuntime" json:"container_runtime,omitempty"`
	KubeletVersion   string             `protobuf:"bytes,8,opt,name=kubelet_version,json=kubeletVersion" json:"kubelet_version,omitempty"`
	InstanceType     string             `protobuf:"bytes,9,opt,name=instance_type,json=instanceType" json:"instance_type,omitempty"`
	IsMaster         bool               `protobuf:"varint,10,opt,name=is_master,json=isMaster" json:"is_master,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Node) GetCapacity() *Node_NodeCapacity {
	if m != nil {
		return m.Capacity
	}
	return nil
}

type Node_NodeCapacity struct {
	Cpu    int64 `protobuf:"varint,1,opt,name=cpu" json:"cpu,omitempty"`
	Memory int64 `protobuf:"varint,2,opt,name=memory" json:"memory,omitempty"`
	Pods   int64 `protobuf:"varint,3,opt,name=pods" json:"pods,omitempty"`
}

func (m *Node_NodeCapacity) Reset()                    { *m = Node_NodeCapacity{} }
func (m *Node_NodeCapacity) String() string            { return proto.CompactTextString(m) }
func (*Node_NodeCapacity) ProtoMessage()               {}
func (*Node_NodeCapacity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

type NamespaceListResponse struct {
	Status     *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Namespaces []*Namespace            `protobuf:"bytes,2,rep,name=namespaces" json:"namespaces,omitempty"`
}

func (m *NamespaceListResponse) Reset()                    { *m = NamespaceListResponse{} }
func (m *NamespaceListResponse) String() string            { return proto.CompactTextString(m) }
func (*NamespaceListResponse) ProtoMessage()               {}
func (*NamespaceListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *NamespaceListResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *NamespaceListResponse) GetNamespaces() []*Namespace {
	if m != nil {
		return m.Namespaces
	}
	return nil
}

type Namespace struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	CreatedAt int64  `protobuf:"varint,2,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Phase     string `protobuf:"bytes,3,opt,name=phase" json:"phase,omitempty"`
}

func (m *Namespace) Reset()                    { *m = Namespace{} }
func (m *Namespace) String() string            { return proto.CompactTextString(m) }
func (*Namespace) ProtoMessage()               {}
func (*Namespace) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type SecretListResponse struct {
	Status  *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Secrets []*Secret               `protobuf:"bytes,2,rep,name=secrets" json:"secrets,omitempty"`
}

func (m *SecretListResponse) Reset()                    { *m = SecretListResponse{} }
func (m *SecretListResponse) String() string            { return proto.CompactTextString(m) }
func (*SecretListResponse) ProtoMessage()               {}
func (*SecretListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *SecretListResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SecretListResponse) GetSecrets() []*Secret {
	if m != nil {
		return m.Secrets
	}
	return nil
}

type Secret struct {
	Name            string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	ResourceVersion string `protobuf:"bytes,3,opt,name=resource_version,json=resourceVersion" json:"resource_version,omitempty"`
	SecretType      string `protobuf:"bytes,4,opt,name=secret_type,json=secretType" json:"secret_type,omitempty"`
	CreatedAt       int64  `protobuf:"varint,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *Secret) Reset()                    { *m = Secret{} }
func (m *Secret) String() string            { return proto.CompactTextString(m) }
func (*Secret) ProtoMessage()               {}
func (*Secret) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type JobListResponse struct {
	Status *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Jobs   []*Job                  `protobuf:"bytes,2,rep,name=jobs" json:"jobs,omitempty"`
}

func (m *JobListResponse) Reset()                    { *m = JobListResponse{} }
func (m *JobListResponse) String() string            { return proto.CompactTextString(m) }
func (*JobListResponse) ProtoMessage()               {}
func (*JobListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *JobListResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *JobListResponse) GetJobs() []*Job {
	if m != nil {
		return m.Jobs
	}
	return nil
}

type Job struct {
	Name           string       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace      string       `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	App            string       `protobuf:"bytes,3,opt,name=app" json:"app,omitempty"`
	CreatedAt      int64        `protobuf:"varint,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Parallelism    int32        `protobuf:"varint,5,opt,name=parallelism" json:"parallelism,omitempty"`
	Completions    int32        `protobuf:"varint,6,opt,name=completions" json:"completions,omitempty"`
	Containers     []*Container `protobuf:"bytes,7,rep,name=containers" json:"containers,omitempty"`
	StartTime      int64        `protobuf:"varint,8,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	CompletionTime int64        `protobuf:"varint,9,opt,name=completion_time,json=completionTime" json:"completion_time,omitempty"`
	Active         int32        `protobuf:"varint,10,opt,name=active" json:"active,omitempty"`
	Succeeded      int32        `protobuf:"varint,11,opt,name=succeeded" json:"succeeded,omitempty"`
	Failed         int32        `protobuf:"varint,12,opt,name=failed" json:"failed,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Job) GetContainers() []*Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

type PodListResponse struct {
	Status *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Pods   []*Pod                  `protobuf:"bytes,2,rep,name=pods" json:"pods,omitempty"`
}

func (m *PodListResponse) Reset()                    { *m = PodListResponse{} }
func (m *PodListResponse) String() string            { return proto.CompactTextString(m) }
func (*PodListResponse) ProtoMessage()               {}
func (*PodListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *PodListResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *PodListResponse) GetPods() []*Pod {
	if m != nil {
		return m.Pods
	}
	return nil
}

type Pod struct {
	Name           string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace      string            `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	App            string            `protobuf:"bytes,3,opt,name=app" json:"app,omitempty"`
	CreatedAt      int64             `protobuf:"varint,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Containers     []*Container      `protobuf:"bytes,5,rep,name=containers" json:"containers,omitempty"`
	ServiceAccount string            `protobuf:"bytes,6,opt,name=service_account,json=serviceAccount" json:"service_account,omitempty"`
	NodeName       string            `protobuf:"bytes,7,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	Phase          string            `protobuf:"bytes,8,opt,name=phase" json:"phase,omitempty"`
	StartTime      int64             `protobuf:"varint,9,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	Message        string            `protobuf:"bytes,10,opt,name=message" json:"message,omitempty"`
	Links          map[string]string `protobuf:"bytes,11,rep,name=links" json:"links,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Pod) Reset()                    { *m = Pod{} }
func (m *Pod) String() string            { return proto.CompactTextString(m) }
func (*Pod) ProtoMessage()               {}
func (*Pod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Pod) GetContainers() []*Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

func (m *Pod) GetLinks() map[string]string {
	if m != nil {
		return m.Links
	}
	return nil
}

type Container struct {
	Name     string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Image    string   `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	Commands []string `protobuf:"bytes,3,rep,name=commands" json:"commands,omitempty"`
}

func (m *Container) Reset()                    { *m = Container{} }
func (m *Container) String() string            { return proto.CompactTextString(m) }
func (*Container) ProtoMessage()               {}
func (*Container) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type ServiceListResponse struct {
	Status   *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Services []*Service              `protobuf:"bytes,2,rep,name=services" json:"services,omitempty"`
}

func (m *ServiceListResponse) Reset()                    { *m = ServiceListResponse{} }
func (m *ServiceListResponse) String() string            { return proto.CompactTextString(m) }
func (*ServiceListResponse) ProtoMessage()               {}
func (*ServiceListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ServiceListResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ServiceListResponse) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

type Service struct {
	Name                  string                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace             string                         `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	App                   string                         `protobuf:"bytes,3,opt,name=app" json:"app,omitempty"`
	CreatedAt             int64                          `protobuf:"varint,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Type                  string                         `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	ClusterIp             string                         `protobuf:"bytes,6,opt,name=cluster_ip,json=clusterIp" json:"cluster_ip,omitempty"`
	Ports                 []*Service_Port                `protobuf:"bytes,7,rep,name=ports" json:"ports,omitempty"`
	ExternalIps           []string                       `protobuf:"bytes,8,rep,name=external_ips,json=externalIps" json:"external_ips,omitempty"`
	LoadbalancerIngresses []*Service_LoadBalancerIngress `protobuf:"bytes,9,rep,name=loadbalancer_ingresses,json=loadbalancerIngresses" json:"loadbalancer_ingresses,omitempty"`
}

func (m *Service) Reset()                    { *m = Service{} }
func (m *Service) String() string            { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()               {}
func (*Service) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *Service) GetPorts() []*Service_Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Service) GetLoadbalancerIngresses() []*Service_LoadBalancerIngress {
	if m != nil {
		return m.LoadbalancerIngresses
	}
	return nil
}

type Service_Port struct {
	Name       string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Protocol   string `protobuf:"bytes,2,opt,name=protocol" json:"protocol,omitempty"`
	Port       int32  `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	TargetPort string `protobuf:"bytes,4,opt,name=target_port,json=targetPort" json:"target_port,omitempty"`
	NodePort   int32  `protobuf:"varint,5,opt,name=node_port,json=nodePort" json:"node_port,omitempty"`
}

func (m *Service_Port) Reset()                    { *m = Service_Port{} }
func (m *Service_Port) String() string            { return proto.CompactTextString(m) }
func (*Service_Port) ProtoMessage()               {}
func (*Service_Port) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17, 0} }

type Service_LoadBalancerIngress struct {
	HostName string `protobuf:"bytes,1,opt,name=host_name,json=hostName" json:"host_name,omitempty"`
	Ip       string `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
}

func (m *Service_LoadBalancerIngress) Reset()                    { *m = Service_LoadBalancerIngress{} }
func (m *Service_LoadBalancerIngress) String() string            { return proto.CompactTextString(m) }
func (*Service_LoadBalancerIngress) ProtoMessage()               {}
func (*Service_LoadBalancerIngress) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17, 1} }

type AppDescribeRequest struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Cluster   string `protobuf:"bytes,2,opt,name=cluster" json:"cluster,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
}

func (m *AppDescribeRequest) Reset()                    { *m = AppDescribeRequest{} }
func (m *AppDescribeRequest) String() string            { return proto.CompactTextString(m) }
func (*AppDescribeRequest) ProtoMessage()               {}
func (*AppDescribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type AppDescribeResponse struct {
	Status      *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	App         *Service                `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	Links       map[string]string       `protobuf:"bytes,3,rep,name=links" json:"links,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IcingaState *IcingaState            `protobuf:"bytes,4,opt,name=icinga_state,json=icingaState" json:"icinga_state,omitempty"`
}

func (m *AppDescribeResponse) Reset()                    { *m = AppDescribeResponse{} }
func (m *AppDescribeResponse) String() string            { return proto.CompactTextString(m) }
func (*AppDescribeResponse) ProtoMessage()               {}
func (*AppDescribeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *AppDescribeResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *AppDescribeResponse) GetApp() *Service {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *AppDescribeResponse) GetLinks() map[string]string {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *AppDescribeResponse) GetIcingaState() *IcingaState {
	if m != nil {
		return m.IcingaState
	}
	return nil
}

type AppListResponse struct {
	Status *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Apps   []*App                  `protobuf:"bytes,2,rep,name=apps" json:"apps,omitempty"`
}

func (m *AppListResponse) Reset()                    { *m = AppListResponse{} }
func (m *AppListResponse) String() string            { return proto.CompactTextString(m) }
func (*AppListResponse) ProtoMessage()               {}
func (*AppListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *AppListResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *AppListResponse) GetApps() []*App {
	if m != nil {
		return m.Apps
	}
	return nil
}

type App struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	CreatedAt int64  `protobuf:"varint,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Type      string `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	ClusterIp string `protobuf:"bytes,6,opt,name=cluster_ip,json=clusterIp" json:"cluster_ip,omitempty"`
}

func (m *App) Reset()                    { *m = App{} }
func (m *App) String() string            { return proto.CompactTextString(m) }
func (*App) ProtoMessage()               {}
func (*App) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

type ReplicationControllerListResponse struct {
	Status                 *appscode_dtypes.Status  `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	ReplicationControllers []*ReplicationController `protobuf:"bytes,2,rep,name=replication_controllers,json=replicationControllers" json:"replication_controllers,omitempty"`
}

func (m *ReplicationControllerListResponse) Reset()         { *m = ReplicationControllerListResponse{} }
func (m *ReplicationControllerListResponse) String() string { return proto.CompactTextString(m) }
func (*ReplicationControllerListResponse) ProtoMessage()    {}
func (*ReplicationControllerListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{22}
}

func (m *ReplicationControllerListResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ReplicationControllerListResponse) GetReplicationControllers() []*ReplicationController {
	if m != nil {
		return m.ReplicationControllers
	}
	return nil
}

type ReplicationController struct {
	Name               string       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace          string       `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	App                string       `protobuf:"bytes,3,opt,name=app" json:"app,omitempty"`
	CreatedAt          int64        `protobuf:"varint,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Generation         int64        `protobuf:"varint,5,opt,name=generation" json:"generation,omitempty"`
	CurrentReplicas    int32        `protobuf:"varint,6,opt,name=current_replicas,json=currentReplicas" json:"current_replicas,omitempty"`
	Replicas           int32        `protobuf:"varint,7,opt,name=replicas" json:"replicas,omitempty"`
	ObservedGeneration int64        `protobuf:"varint,8,opt,name=observed_generation,json=observedGeneration" json:"observed_generation,omitempty"`
	Containers         []*Container `protobuf:"bytes,9,rep,name=containers" json:"containers,omitempty"`
}

func (m *ReplicationController) Reset()                    { *m = ReplicationController{} }
func (m *ReplicationController) String() string            { return proto.CompactTextString(m) }
func (*ReplicationController) ProtoMessage()               {}
func (*ReplicationController) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *ReplicationController) GetContainers() []*Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

type ConfigMapListResponse struct {
	Status    *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	ConfigMap []*ConfigMap            `protobuf:"bytes,2,rep,name=config_map,json=configMap" json:"config_map,omitempty"`
}

func (m *ConfigMapListResponse) Reset()                    { *m = ConfigMapListResponse{} }
func (m *ConfigMapListResponse) String() string            { return proto.CompactTextString(m) }
func (*ConfigMapListResponse) ProtoMessage()               {}
func (*ConfigMapListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ConfigMapListResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ConfigMapListResponse) GetConfigMap() []*ConfigMap {
	if m != nil {
		return m.ConfigMap
	}
	return nil
}

type ConfigMap struct {
	Name            string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	Size            int32  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	CreatedAt       int64  `protobuf:"varint,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	ResourceVersion string `protobuf:"bytes,5,opt,name=resource_version,json=resourceVersion" json:"resource_version,omitempty"`
}

func (m *ConfigMap) Reset()                    { *m = ConfigMap{} }
func (m *ConfigMap) String() string            { return proto.CompactTextString(m) }
func (*ConfigMap) ProtoMessage()               {}
func (*ConfigMap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

type ConfigMapDescribeRequest struct {
	Cluster   string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Raw       string `protobuf:"bytes,4,opt,name=raw" json:"raw,omitempty"`
}

func (m *ConfigMapDescribeRequest) Reset()                    { *m = ConfigMapDescribeRequest{} }
func (m *ConfigMapDescribeRequest) String() string            { return proto.CompactTextString(m) }
func (*ConfigMapDescribeRequest) ProtoMessage()               {}
func (*ConfigMapDescribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

type ConfigMapDescribeResponse struct {
	Status    *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Name      string                  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Namespace string                  `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Cluster   string                  `protobuf:"bytes,4,opt,name=cluster" json:"cluster,omitempty"`
	CreatedAt int64                   `protobuf:"varint,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Data      map[string]string       `protobuf:"bytes,6,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Raw       *Raw                    `protobuf:"bytes,7,opt,name=raw" json:"raw,omitempty"`
}

func (m *ConfigMapDescribeResponse) Reset()                    { *m = ConfigMapDescribeResponse{} }
func (m *ConfigMapDescribeResponse) String() string            { return proto.CompactTextString(m) }
func (*ConfigMapDescribeResponse) ProtoMessage()               {}
func (*ConfigMapDescribeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *ConfigMapDescribeResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ConfigMapDescribeResponse) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ConfigMapDescribeResponse) GetRaw() *Raw {
	if m != nil {
		return m.Raw
	}
	return nil
}

type SecretDescribeRequest struct {
	Cluster   string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Raw       string `protobuf:"bytes,4,opt,name=raw" json:"raw,omitempty"`
}

func (m *SecretDescribeRequest) Reset()                    { *m = SecretDescribeRequest{} }
func (m *SecretDescribeRequest) String() string            { return proto.CompactTextString(m) }
func (*SecretDescribeRequest) ProtoMessage()               {}
func (*SecretDescribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

type SecretDescribeResponse struct {
	Status          *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Cluster         string                  `protobuf:"bytes,2,opt,name=cluster" json:"cluster,omitempty"`
	Name            string                  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Namespace       string                  `protobuf:"bytes,4,opt,name=namespace" json:"namespace,omitempty"`
	CreatedAt       int64                   `protobuf:"varint,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	ResourceVersion string                  `protobuf:"bytes,6,opt,name=resource_version,json=resourceVersion" json:"resource_version,omitempty"`
	Type            string                  `protobuf:"bytes,7,opt,name=type" json:"type,omitempty"`
	Data            map[string]string       `protobuf:"bytes,8,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Raw             *Raw                    `protobuf:"bytes,9,opt,name=raw" json:"raw,omitempty"`
}

func (m *SecretDescribeResponse) Reset()                    { *m = SecretDescribeResponse{} }
func (m *SecretDescribeResponse) String() string            { return proto.CompactTextString(m) }
func (*SecretDescribeResponse) ProtoMessage()               {}
func (*SecretDescribeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *SecretDescribeResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SecretDescribeResponse) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SecretDescribeResponse) GetRaw() *Raw {
	if m != nil {
		return m.Raw
	}
	return nil
}

type Raw struct {
	Format string `protobuf:"bytes,1,opt,name=format" json:"format,omitempty"`
	Data   string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *Raw) Reset()                    { *m = Raw{} }
func (m *Raw) String() string            { return proto.CompactTextString(m) }
func (*Raw) ProtoMessage()               {}
func (*Raw) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func init() {
	proto.RegisterType((*KubeResource)(nil), "appscode.kubernetes.v1beta1.KubeResource")
	proto.RegisterType((*IcingaState)(nil), "appscode.kubernetes.v1beta1.IcingaState")
	proto.RegisterType((*CopyResourceRequest)(nil), "appscode.kubernetes.v1beta1.CopyResourceRequest")
	proto.RegisterType((*CopyResourceResponse)(nil), "appscode.kubernetes.v1beta1.CopyResourceResponse")
	proto.RegisterType((*ClientRequest)(nil), "appscode.kubernetes.v1beta1.ClientRequest")
	proto.RegisterType((*NodeListResponse)(nil), "appscode.kubernetes.v1beta1.NodeListResponse")
	proto.RegisterType((*Node)(nil), "appscode.kubernetes.v1beta1.Node")
	proto.RegisterType((*Node_NodeCapacity)(nil), "appscode.kubernetes.v1beta1.Node.NodeCapacity")
	proto.RegisterType((*NamespaceListResponse)(nil), "appscode.kubernetes.v1beta1.NamespaceListResponse")
	proto.RegisterType((*Namespace)(nil), "appscode.kubernetes.v1beta1.Namespace")
	proto.RegisterType((*SecretListResponse)(nil), "appscode.kubernetes.v1beta1.SecretListResponse")
	proto.RegisterType((*Secret)(nil), "appscode.kubernetes.v1beta1.Secret")
	proto.RegisterType((*JobListResponse)(nil), "appscode.kubernetes.v1beta1.JobListResponse")
	proto.RegisterType((*Job)(nil), "appscode.kubernetes.v1beta1.Job")
	proto.RegisterType((*PodListResponse)(nil), "appscode.kubernetes.v1beta1.PodListResponse")
	proto.RegisterType((*Pod)(nil), "appscode.kubernetes.v1beta1.Pod")
	proto.RegisterType((*Container)(nil), "appscode.kubernetes.v1beta1.Container")
	proto.RegisterType((*ServiceListResponse)(nil), "appscode.kubernetes.v1beta1.ServiceListResponse")
	proto.RegisterType((*Service)(nil), "appscode.kubernetes.v1beta1.Service")
	proto.RegisterType((*Service_Port)(nil), "appscode.kubernetes.v1beta1.Service.Port")
	proto.RegisterType((*Service_LoadBalancerIngress)(nil), "appscode.kubernetes.v1beta1.Service.LoadBalancerIngress")
	proto.RegisterType((*AppDescribeRequest)(nil), "appscode.kubernetes.v1beta1.AppDescribeRequest")
	proto.RegisterType((*AppDescribeResponse)(nil), "appscode.kubernetes.v1beta1.AppDescribeResponse")
	proto.RegisterType((*AppListResponse)(nil), "appscode.kubernetes.v1beta1.AppListResponse")
	proto.RegisterType((*App)(nil), "appscode.kubernetes.v1beta1.App")
	proto.RegisterType((*ReplicationControllerListResponse)(nil), "appscode.kubernetes.v1beta1.ReplicationControllerListResponse")
	proto.RegisterType((*ReplicationController)(nil), "appscode.kubernetes.v1beta1.ReplicationController")
	proto.RegisterType((*ConfigMapListResponse)(nil), "appscode.kubernetes.v1beta1.ConfigMapListResponse")
	proto.RegisterType((*ConfigMap)(nil), "appscode.kubernetes.v1beta1.ConfigMap")
	proto.RegisterType((*ConfigMapDescribeRequest)(nil), "appscode.kubernetes.v1beta1.ConfigMapDescribeRequest")
	proto.RegisterType((*ConfigMapDescribeResponse)(nil), "appscode.kubernetes.v1beta1.ConfigMapDescribeResponse")
	proto.RegisterType((*SecretDescribeRequest)(nil), "appscode.kubernetes.v1beta1.SecretDescribeRequest")
	proto.RegisterType((*SecretDescribeResponse)(nil), "appscode.kubernetes.v1beta1.SecretDescribeResponse")
	proto.RegisterType((*Raw)(nil), "appscode.kubernetes.v1beta1.Raw")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Clients service

type ClientsClient interface {
	Copy(ctx context.Context, in *CopyResourceRequest, opts ...grpc.CallOption) (*CopyResourceResponse, error)
	Nodes(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*NodeListResponse, error)
	Apps(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*AppListResponse, error)
	App(ctx context.Context, in *AppDescribeRequest, opts ...grpc.CallOption) (*AppDescribeResponse, error)
	AppPods(ctx context.Context, in *AppDescribeRequest, opts ...grpc.CallOption) (*PodListResponse, error)
	Namespaces(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*NamespaceListResponse, error)
	Secrets(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*SecretListResponse, error)
	Secret(ctx context.Context, in *SecretDescribeRequest, opts ...grpc.CallOption) (*SecretDescribeResponse, error)
	Jobs(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*JobListResponse, error)
	Pods(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*PodListResponse, error)
	Services(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*ServiceListResponse, error)
	ReplicationControllers(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*ReplicationControllerListResponse, error)
	ConfigMaps(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*ConfigMapListResponse, error)
	ConfigMap(ctx context.Context, in *ConfigMapDescribeRequest, opts ...grpc.CallOption) (*ConfigMapDescribeResponse, error)
}

type clientsClient struct {
	cc *grpc.ClientConn
}

func NewClientsClient(cc *grpc.ClientConn) ClientsClient {
	return &clientsClient{cc}
}

func (c *clientsClient) Copy(ctx context.Context, in *CopyResourceRequest, opts ...grpc.CallOption) (*CopyResourceResponse, error) {
	out := new(CopyResourceResponse)
	err := grpc.Invoke(ctx, "/appscode.kubernetes.v1beta1.Clients/Copy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) Nodes(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*NodeListResponse, error) {
	out := new(NodeListResponse)
	err := grpc.Invoke(ctx, "/appscode.kubernetes.v1beta1.Clients/Nodes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) Apps(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*AppListResponse, error) {
	out := new(AppListResponse)
	err := grpc.Invoke(ctx, "/appscode.kubernetes.v1beta1.Clients/Apps", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) App(ctx context.Context, in *AppDescribeRequest, opts ...grpc.CallOption) (*AppDescribeResponse, error) {
	out := new(AppDescribeResponse)
	err := grpc.Invoke(ctx, "/appscode.kubernetes.v1beta1.Clients/App", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) AppPods(ctx context.Context, in *AppDescribeRequest, opts ...grpc.CallOption) (*PodListResponse, error) {
	out := new(PodListResponse)
	err := grpc.Invoke(ctx, "/appscode.kubernetes.v1beta1.Clients/AppPods", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) Namespaces(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*NamespaceListResponse, error) {
	out := new(NamespaceListResponse)
	err := grpc.Invoke(ctx, "/appscode.kubernetes.v1beta1.Clients/Namespaces", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) Secrets(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*SecretListResponse, error) {
	out := new(SecretListResponse)
	err := grpc.Invoke(ctx, "/appscode.kubernetes.v1beta1.Clients/Secrets", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) Secret(ctx context.Context, in *SecretDescribeRequest, opts ...grpc.CallOption) (*SecretDescribeResponse, error) {
	out := new(SecretDescribeResponse)
	err := grpc.Invoke(ctx, "/appscode.kubernetes.v1beta1.Clients/Secret", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) Jobs(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*JobListResponse, error) {
	out := new(JobListResponse)
	err := grpc.Invoke(ctx, "/appscode.kubernetes.v1beta1.Clients/Jobs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) Pods(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*PodListResponse, error) {
	out := new(PodListResponse)
	err := grpc.Invoke(ctx, "/appscode.kubernetes.v1beta1.Clients/Pods", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) Services(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*ServiceListResponse, error) {
	out := new(ServiceListResponse)
	err := grpc.Invoke(ctx, "/appscode.kubernetes.v1beta1.Clients/Services", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) ReplicationControllers(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*ReplicationControllerListResponse, error) {
	out := new(ReplicationControllerListResponse)
	err := grpc.Invoke(ctx, "/appscode.kubernetes.v1beta1.Clients/ReplicationControllers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) ConfigMaps(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*ConfigMapListResponse, error) {
	out := new(ConfigMapListResponse)
	err := grpc.Invoke(ctx, "/appscode.kubernetes.v1beta1.Clients/ConfigMaps", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) ConfigMap(ctx context.Context, in *ConfigMapDescribeRequest, opts ...grpc.CallOption) (*ConfigMapDescribeResponse, error) {
	out := new(ConfigMapDescribeResponse)
	err := grpc.Invoke(ctx, "/appscode.kubernetes.v1beta1.Clients/ConfigMap", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Clients service

type ClientsServer interface {
	Copy(context.Context, *CopyResourceRequest) (*CopyResourceResponse, error)
	Nodes(context.Context, *ClientRequest) (*NodeListResponse, error)
	Apps(context.Context, *ClientRequest) (*AppListResponse, error)
	App(context.Context, *AppDescribeRequest) (*AppDescribeResponse, error)
	AppPods(context.Context, *AppDescribeRequest) (*PodListResponse, error)
	Namespaces(context.Context, *ClientRequest) (*NamespaceListResponse, error)
	Secrets(context.Context, *ClientRequest) (*SecretListResponse, error)
	Secret(context.Context, *SecretDescribeRequest) (*SecretDescribeResponse, error)
	Jobs(context.Context, *ClientRequest) (*JobListResponse, error)
	Pods(context.Context, *ClientRequest) (*PodListResponse, error)
	Services(context.Context, *ClientRequest) (*ServiceListResponse, error)
	ReplicationControllers(context.Context, *ClientRequest) (*ReplicationControllerListResponse, error)
	ConfigMaps(context.Context, *ClientRequest) (*ConfigMapListResponse, error)
	ConfigMap(context.Context, *ConfigMapDescribeRequest) (*ConfigMapDescribeResponse, error)
}

func RegisterClientsServer(s *grpc.Server, srv ClientsServer) {
	s.RegisterService(&_Clients_serviceDesc, srv)
}

func _Clients_Copy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).Copy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.kubernetes.v1beta1.Clients/Copy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).Copy(ctx, req.(*CopyResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_Nodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).Nodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.kubernetes.v1beta1.Clients/Nodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).Nodes(ctx, req.(*ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_Apps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).Apps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.kubernetes.v1beta1.Clients/Apps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).Apps(ctx, req.(*ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_App_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppDescribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).App(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.kubernetes.v1beta1.Clients/App",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).App(ctx, req.(*AppDescribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_AppPods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppDescribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).AppPods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.kubernetes.v1beta1.Clients/AppPods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).AppPods(ctx, req.(*AppDescribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_Namespaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).Namespaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.kubernetes.v1beta1.Clients/Namespaces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).Namespaces(ctx, req.(*ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_Secrets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).Secrets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.kubernetes.v1beta1.Clients/Secrets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).Secrets(ctx, req.(*ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_Secret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SecretDescribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).Secret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.kubernetes.v1beta1.Clients/Secret",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).Secret(ctx, req.(*SecretDescribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_Jobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).Jobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.kubernetes.v1beta1.Clients/Jobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).Jobs(ctx, req.(*ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_Pods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).Pods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.kubernetes.v1beta1.Clients/Pods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).Pods(ctx, req.(*ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_Services_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).Services(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.kubernetes.v1beta1.Clients/Services",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).Services(ctx, req.(*ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_ReplicationControllers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).ReplicationControllers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.kubernetes.v1beta1.Clients/ReplicationControllers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).ReplicationControllers(ctx, req.(*ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_ConfigMaps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).ConfigMaps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.kubernetes.v1beta1.Clients/ConfigMaps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).ConfigMaps(ctx, req.(*ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_ConfigMap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigMapDescribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).ConfigMap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.kubernetes.v1beta1.Clients/ConfigMap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).ConfigMap(ctx, req.(*ConfigMapDescribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Clients_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appscode.kubernetes.v1beta1.Clients",
	HandlerType: (*ClientsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Copy",
			Handler:    _Clients_Copy_Handler,
		},
		{
			MethodName: "Nodes",
			Handler:    _Clients_Nodes_Handler,
		},
		{
			MethodName: "Apps",
			Handler:    _Clients_Apps_Handler,
		},
		{
			MethodName: "App",
			Handler:    _Clients_App_Handler,
		},
		{
			MethodName: "AppPods",
			Handler:    _Clients_AppPods_Handler,
		},
		{
			MethodName: "Namespaces",
			Handler:    _Clients_Namespaces_Handler,
		},
		{
			MethodName: "Secrets",
			Handler:    _Clients_Secrets_Handler,
		},
		{
			MethodName: "Secret",
			Handler:    _Clients_Secret_Handler,
		},
		{
			MethodName: "Jobs",
			Handler:    _Clients_Jobs_Handler,
		},
		{
			MethodName: "Pods",
			Handler:    _Clients_Pods_Handler,
		},
		{
			MethodName: "Services",
			Handler:    _Clients_Services_Handler,
		},
		{
			MethodName: "ReplicationControllers",
			Handler:    _Clients_ReplicationControllers_Handler,
		},
		{
			MethodName: "ConfigMaps",
			Handler:    _Clients_ConfigMaps_Handler,
		},
		{
			MethodName: "ConfigMap",
			Handler:    _Clients_ConfigMap_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("client.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x59, 0xcd, 0x8f, 0x1c, 0x47,
	0x15, 0x57, 0xcf, 0xc7, 0xce, 0xcc, 0x9b, 0xcd, 0xee, 0x52, 0xb6, 0x37, 0x93, 0x49, 0x88, 0xed,
	0x36, 0x10, 0x3b, 0x1f, 0x3b, 0xf6, 0x86, 0xd8, 0x8e, 0x13, 0x9b, 0x8c, 0xd7, 0xc6, 0xec, 0x47,
	0xd6, 0xeb, 0xb6, 0x21, 0x52, 0x04, 0x6a, 0x6a, 0xba, 0xcb, 0x93, 0xce, 0xf6, 0x74, 0x15, 0x5d,
	0x35, 0x6b, 0x2f, 0xc1, 0x97, 0x88, 0x43, 0xe0, 0x02, 0x12, 0x47, 0xce, 0x44, 0x42, 0x1c, 0x90,
	0x40, 0x48, 0x1c, 0x09, 0x48, 0x48, 0x1c, 0xe0, 0xc2, 0x05, 0x38, 0xf3, 0x57, 0x70, 0x42, 0xf5,
	0xd1, 0x3d, 0x3d, 0xe3, 0xf1, 0x7c, 0xae, 0xf6, 0xb2, 0xdb, 0xf5, 0xaa, 0x5e, 0xd5, 0xef, 0x7d,
	0xd4, 0x7b, 0xf5, 0xde, 0xc0, 0xa2, 0x17, 0x06, 0x24, 0x12, 0x6b, 0x2c, 0xa6, 0x82, 0xa2, 0x17,
	0x31, 0x63, 0xdc, 0xa3, 0x3e, 0x59, 0xdb, 0xef, 0xb6, 0x48, 0x1c, 0x11, 0x41, 0xf8, 0xda, 0xc1,
	0xa5, 0x16, 0x11, 0xf8, 0x52, 0xfd, 0xa5, 0x36, 0xa5, 0xed, 0x90, 0x34, 0x30, 0x0b, 0x1a, 0x38,
	0x8a, 0xa8, 0xc0, 0x22, 0xa0, 0x11, 0xd7, 0xac, 0xf5, 0x97, 0x13, 0xd6, 0x67, 0xcc, 0x9f, 0xee,
	0x9b, 0xf7, 0xc5, 0x21, 0x23, 0xbc, 0xa1, 0xfe, 0xea, 0x05, 0x76, 0x04, 0x8b, 0xdb, 0xdd, 0x16,
	0x71, 0x08, 0xa7, 0xdd, 0xd8, 0x23, 0x08, 0x41, 0x41, 0x4e, 0xd7, 0xac, 0x33, 0xd6, 0xf9, 0x8a,
	0xa3, 0xbe, 0x25, 0x2d, 0xc2, 0x1d, 0x52, 0xcb, 0x69, 0x9a, 0xfc, 0x46, 0x2f, 0x41, 0x45, 0xfe,
	0xe7, 0x0c, 0x7b, 0xa4, 0x96, 0x57, 0x13, 0x3d, 0x02, 0xaa, 0x41, 0xc9, 0x0b, 0xbb, 0x5c, 0x90,
	0xb8, 0x56, 0x50, 0x73, 0xc9, 0xd0, 0xee, 0x40, 0x75, 0xd3, 0x0b, 0xa2, 0x36, 0xbe, 0x2f, 0xb0,
	0x20, 0x68, 0x09, 0x72, 0x77, 0xb7, 0xd5, 0x61, 0x45, 0x27, 0x77, 0x77, 0x5b, 0x32, 0x7e, 0x80,
	0xe3, 0x28, 0x88, 0xda, 0xea, 0xb4, 0xa2, 0x93, 0x0c, 0x51, 0x1d, 0xca, 0x1b, 0x71, 0x20, 0x02,
	0x0f, 0x87, 0xea, 0xbc, 0xa2, 0x93, 0x8e, 0x25, 0xd7, 0xb7, 0xa3, 0xfd, 0x88, 0x3e, 0x8a, 0xd4,
	0x71, 0x45, 0x27, 0x19, 0xda, 0xbf, 0xb2, 0xe0, 0xc4, 0x06, 0x65, 0x87, 0x89, 0x7c, 0x0e, 0xf9,
	0x41, 0x97, 0x70, 0x81, 0x9a, 0xb0, 0xa0, 0x09, 0xea, 0xec, 0xea, 0xfa, 0x85, 0xb5, 0x11, 0x36,
	0x58, 0xcb, 0x6a, 0xc8, 0x31, 0x8c, 0x68, 0x1b, 0xaa, 0x3e, 0xe1, 0x22, 0x88, 0x94, 0xc2, 0x15,
	0xdc, 0xa9, 0xf6, 0xc9, 0x72, 0xdb, 0x77, 0xe0, 0x64, 0x3f, 0x4c, 0xce, 0x68, 0xc4, 0x09, 0x6a,
	0xc0, 0x02, 0x17, 0x58, 0x74, 0xb9, 0xc1, 0xf9, 0x7c, 0x6f, 0x7f, 0x6d, 0xcc, 0xb5, 0xfb, 0x6a,
	0xda, 0x31, 0xcb, 0xec, 0x0b, 0xf0, 0xdc, 0x86, 0xf2, 0xad, 0x44, 0xd2, 0x8c, 0x29, 0xac, 0x7e,
	0x53, 0xfc, 0x08, 0x56, 0x76, 0xa9, 0x4f, 0x76, 0x02, 0x2e, 0x66, 0x3e, 0x0f, 0x5d, 0x81, 0x62,
	0x44, 0x7d, 0xc2, 0x6b, 0xb9, 0x33, 0xf9, 0xf3, 0xd5, 0xf5, 0xb3, 0x23, 0xe5, 0x97, 0xc7, 0x39,
	0x7a, 0xbd, 0xfd, 0x8f, 0x3c, 0x14, 0xe4, 0x38, 0xf5, 0x2e, 0x2b, 0xe3, 0x5d, 0xa7, 0xa1, 0xca,
	0x62, 0x7a, 0x10, 0xf8, 0x24, 0x76, 0x03, 0xdf, 0x38, 0x1e, 0x24, 0xa4, 0x4d, 0x1f, 0x7d, 0x19,
	0xc0, 0x8b, 0x09, 0x16, 0xc4, 0x77, 0xb1, 0x50, 0xfe, 0x90, 0x77, 0x2a, 0x86, 0xd2, 0x14, 0x68,
	0x0b, 0xca, 0x1e, 0x66, 0xd8, 0x0b, 0xc4, 0xa1, 0xf2, 0x88, 0xea, 0xfa, 0xda, 0x58, 0x60, 0xea,
	0xcf, 0x86, 0xe1, 0x72, 0x52, 0x7e, 0xf4, 0x02, 0x94, 0x29, 0x77, 0x83, 0x0e, 0x6e, 0x93, 0x5a,
	0x51, 0x6b, 0x90, 0xf2, 0x4d, 0x39, 0x44, 0x5f, 0x85, 0xa5, 0x7d, 0xb9, 0x55, 0xe8, 0x1e, 0x90,
	0x98, 0x4b, 0x2f, 0x58, 0x50, 0x0b, 0x9e, 0xd3, 0xd4, 0xef, 0x68, 0x22, 0x7a, 0x0d, 0xbe, 0xe4,
	0xd1, 0x48, 0xe0, 0x20, 0x22, 0xb1, 0x1b, 0x77, 0x23, 0x11, 0x74, 0x48, 0xad, 0xa4, 0x56, 0xae,
	0xa4, 0x13, 0x8e, 0xa6, 0xa3, 0x57, 0x60, 0x59, 0x02, 0x0c, 0x89, 0x48, 0x37, 0x2d, 0xab, 0xa5,
	0x4b, 0x86, 0x9c, 0xec, 0x7a, 0x0e, 0x9e, 0x0b, 0x22, 0x2e, 0x70, 0xe4, 0x11, 0x57, 0x5d, 0xd9,
	0x8a, 0x5a, 0xb6, 0x98, 0x10, 0x1f, 0xc8, 0xab, 0xfb, 0x22, 0x54, 0x02, 0xee, 0x76, 0xb0, 0xb2,
	0x3f, 0x9c, 0xb1, 0xce, 0x97, 0x9d, 0x72, 0xc0, 0xdf, 0x57, 0xe3, 0xfa, 0x0e, 0x2c, 0x66, 0x65,
	0x46, 0x2b, 0x90, 0xf7, 0x58, 0x57, 0x19, 0x22, 0xef, 0xc8, 0x4f, 0xb4, 0x0a, 0x0b, 0x1d, 0xd2,
	0xa1, 0xf1, 0xa1, 0x32, 0x41, 0xde, 0x31, 0x23, 0x69, 0x33, 0x46, 0x7d, 0x6e, 0x14, 0xaf, 0xbe,
	0xed, 0x9f, 0x5b, 0x70, 0x6a, 0x37, 0x89, 0x00, 0xf3, 0x39, 0xd5, 0x37, 0x01, 0xd2, 0x58, 0x92,
	0x78, 0xd6, 0xd7, 0x46, 0x1b, 0x30, 0x59, 0xee, 0x64, 0x38, 0xed, 0x07, 0x50, 0x49, 0x27, 0x86,
	0xfa, 0x59, 0xbf, 0x1b, 0xe5, 0x06, 0xdd, 0xe8, 0x24, 0x14, 0xd9, 0x47, 0x98, 0x27, 0x01, 0x4e,
	0x0f, 0xec, 0x1f, 0x5b, 0x80, 0xee, 0x13, 0x2f, 0x26, 0x62, 0x3e, 0x29, 0xaf, 0x43, 0x89, 0xab,
	0x6d, 0x12, 0x11, 0xcf, 0x8d, 0x14, 0x51, 0x1f, 0xe9, 0x24, 0x3c, 0x32, 0xb4, 0x2d, 0x68, 0xda,
	0x50, 0xd1, 0xfa, 0x02, 0x74, 0x6e, 0x30, 0x40, 0x5f, 0x80, 0x95, 0xd8, 0xc4, 0x9a, 0xd4, 0xcd,
	0xb4, 0x90, 0xcb, 0x09, 0x3d, 0xf1, 0xb3, 0xd3, 0x50, 0xd5, 0x47, 0x6a, 0x2f, 0xd3, 0xf1, 0x1c,
	0x34, 0x49, 0xf9, 0x58, 0xbf, 0x12, 0x8b, 0x03, 0x4a, 0xb4, 0x1f, 0xc3, 0xf2, 0x16, 0x6d, 0xcd,
	0xa7, 0xaa, 0xaf, 0x43, 0xe1, 0x63, 0xda, 0x4a, 0xf4, 0x74, 0x66, 0xa4, 0x9e, 0xb6, 0x68, 0xcb,
	0x51, 0xab, 0xed, 0x9f, 0xe6, 0x21, 0xbf, 0x45, 0x5b, 0x33, 0xa8, 0x67, 0x05, 0xf2, 0x98, 0x31,
	0xa3, 0x11, 0xf9, 0x39, 0x20, 0x64, 0x61, 0xd0, 0x53, 0xce, 0x40, 0x95, 0xe1, 0x18, 0x87, 0x21,
	0x09, 0x03, 0xde, 0x51, 0x4a, 0x28, 0x3a, 0x59, 0x92, 0x5c, 0xe1, 0xd1, 0x0e, 0x0b, 0x89, 0x4a,
	0xcf, 0x2a, 0x50, 0x14, 0x9d, 0x2c, 0x49, 0x7a, 0x7d, 0x1a, 0x0d, 0x78, 0xad, 0x34, 0x81, 0xd7,
	0x6f, 0xa4, 0xc1, 0x23, 0xc3, 0x29, 0xa1, 0x72, 0x81, 0x63, 0xe1, 0xaa, 0x38, 0x53, 0xd6, 0x50,
	0x15, 0xe5, 0x81, 0x09, 0x30, 0xbd, 0x53, 0xf5, 0x9a, 0x8a, 0x5a, 0xb3, 0xd4, 0x23, 0xab, 0x85,
	0xab, 0xb0, 0x80, 0x3d, 0x11, 0x1c, 0x10, 0x15, 0x38, 0x8a, 0x8e, 0x19, 0x49, 0xd5, 0xf1, 0xae,
	0xe7, 0x11, 0xe2, 0x13, 0xbf, 0x56, 0x55, 0x53, 0x3d, 0x82, 0xe4, 0x7a, 0x88, 0x83, 0x90, 0xf8,
	0xb5, 0x45, 0xcd, 0xa5, 0x47, 0xd2, 0x0d, 0xf6, 0xa8, 0x3f, 0xb7, 0x1b, 0xa8, 0xb0, 0x33, 0x89,
	0x1b, 0xec, 0x51, 0xdf, 0x04, 0xa6, 0x3f, 0xe7, 0x21, 0xbf, 0x47, 0xfd, 0xe3, 0x70, 0x83, 0x7e,
	0x13, 0x16, 0x67, 0x36, 0xe1, 0x2b, 0xb0, 0xcc, 0x49, 0x7c, 0x10, 0x78, 0xc4, 0xc5, 0x9e, 0x47,
	0xbb, 0x91, 0x30, 0x99, 0x65, 0xc9, 0x90, 0x9b, 0x9a, 0x2a, 0xe3, 0xbb, 0x4c, 0xa7, 0xae, 0x12,
	0x4c, 0xa7, 0x94, 0xb2, 0x24, 0xc8, 0xb0, 0xd7, 0x0b, 0x5f, 0xe5, 0x4c, 0xf8, 0x1a, 0x70, 0x8f,
	0xca, 0xa0, 0x7b, 0xd4, 0xa0, 0xd4, 0x21, 0x9c, 0xcb, 0x6c, 0x07, 0x3a, 0xdb, 0x99, 0x21, 0x6a,
	0x42, 0x31, 0x0c, 0xa2, 0x7d, 0x5e, 0xab, 0x2a, 0xb9, 0x5e, 0x1b, 0xa7, 0xfe, 0xb5, 0x1d, 0xb9,
	0xfa, 0x76, 0x24, 0xe2, 0x43, 0x47, 0x73, 0xd6, 0xaf, 0x02, 0xf4, 0x88, 0x52, 0xbd, 0xfb, 0xe4,
	0xd0, 0xd8, 0x43, 0x7e, 0x4a, 0xc4, 0x07, 0x38, 0xec, 0x26, 0xa6, 0xd0, 0x83, 0x6b, 0xb9, 0xab,
	0x96, 0x7d, 0x0f, 0x2a, 0xa9, 0xaa, 0x86, 0x5a, 0xf2, 0x24, 0x14, 0x75, 0x8e, 0x36, 0xac, 0x6a,
	0x20, 0x5f, 0x8d, 0x1e, 0xed, 0x74, 0x70, 0xa4, 0x92, 0x55, 0x5e, 0xaa, 0x27, 0x19, 0xdb, 0x9f,
	0x59, 0x70, 0xe2, 0xbe, 0x56, 0xe7, 0x7c, 0x6e, 0xf9, 0x1e, 0x94, 0x8d, 0x59, 0x12, 0xd7, 0xfc,
	0xca, 0x98, 0x48, 0xae, 0x16, 0x3b, 0x29, 0x97, 0xfd, 0x97, 0x02, 0x94, 0x0c, 0xf5, 0x38, 0xdc,
	0x34, 0x79, 0xe4, 0x17, 0x33, 0x8f, 0x7c, 0xc9, 0xa2, 0x1f, 0x86, 0x6e, 0xc0, 0x8c, 0xb7, 0x55,
	0x0c, 0x65, 0x93, 0xa1, 0x6f, 0x40, 0x91, 0xd1, 0x58, 0x24, 0x71, 0xe9, 0xc2, 0x24, 0x02, 0xae,
	0xed, 0xd1, 0x58, 0x38, 0x9a, 0x0f, 0x9d, 0x85, 0x45, 0xf2, 0x58, 0x90, 0x38, 0xc2, 0xa1, 0x1b,
	0x30, 0x5e, 0x2b, 0x2b, 0x6b, 0x54, 0x13, 0xda, 0x26, 0xe3, 0x88, 0xc2, 0x6a, 0x48, 0xb1, 0xdf,
	0xc2, 0xa1, 0x7c, 0xbf, 0xc4, 0x6e, 0x10, 0xb5, 0x63, 0xc2, 0x39, 0xe1, 0xb5, 0x8a, 0x3a, 0xf4,
	0xea, 0x44, 0x87, 0xee, 0x50, 0xec, 0xdf, 0x34, 0x5b, 0x6c, 0xea, 0x1d, 0x9c, 0x53, 0xd9, 0x7d,
	0x37, 0x93, 0x6d, 0xeb, 0x9f, 0x59, 0x50, 0x90, 0x18, 0x87, 0xea, 0xbc, 0x0e, 0x65, 0x55, 0x22,
	0x79, 0x34, 0x34, 0x2a, 0x4f, 0xc7, 0xfa, 0xfd, 0x13, 0x0b, 0x53, 0x88, 0xa8, 0x6f, 0x99, 0x27,
	0x05, 0x8e, 0xdb, 0x44, 0xb8, 0x6a, 0xca, 0xe4, 0x49, 0x4d, 0x52, 0x87, 0x24, 0x77, 0x55, 0x4d,
	0xeb, 0x0c, 0xa1, 0xee, 0xaa, 0x9c, 0xac, 0xdf, 0x84, 0x13, 0x43, 0x80, 0x4b, 0x9e, 0x8f, 0x28,
	0x17, 0x6e, 0x06, 0x5d, 0x59, 0x12, 0xd4, 0xfd, 0x5e, 0x82, 0x5c, 0xc0, 0x0c, 0xb6, 0x5c, 0xc0,
	0xec, 0xef, 0x03, 0x6a, 0x32, 0x76, 0x8b, 0x70, 0x2f, 0x0e, 0x5a, 0x69, 0xa9, 0x33, 0x4c, 0xb6,
	0x4c, 0x51, 0x90, 0xeb, 0x2b, 0x0a, 0x46, 0xd7, 0x75, 0xf6, 0xbf, 0x72, 0x70, 0xa2, 0xef, 0x88,
	0x59, 0xaf, 0xcc, 0x65, 0xed, 0xb2, 0xba, 0x68, 0x9a, 0xec, 0xb6, 0x28, 0xc7, 0xbe, 0x97, 0xc4,
	0xa0, 0xbc, 0xf2, 0x88, 0x77, 0x46, 0x72, 0x0e, 0x41, 0xfa, 0x74, 0x4c, 0x42, 0xdb, 0xb0, 0x18,
	0xa8, 0x8a, 0xd4, 0x95, 0xd8, 0x88, 0xa9, 0x17, 0xce, 0x8f, 0xdc, 0x39, 0x53, 0xc2, 0x3a, 0xd5,
	0xa0, 0x37, 0x98, 0x23, 0xc0, 0x3d, 0x86, 0xe5, 0x26, 0x63, 0x73, 0xe7, 0x47, 0xb9, 0x62, 0xa2,
	0xfc, 0xd8, 0x64, 0xcc, 0x51, 0xab, 0xed, 0x9f, 0x58, 0x90, 0x6f, 0x32, 0x36, 0x43, 0xe0, 0x39,
	0xf2, 0x30, 0x63, 0x7f, 0x61, 0xc1, 0x59, 0x87, 0xb0, 0x30, 0xf0, 0x54, 0x5d, 0x2c, 0x43, 0x7e,
	0x4c, 0xc3, 0x90, 0xc4, 0xf3, 0x29, 0x66, 0x1f, 0x9e, 0x8f, 0x7b, 0xbb, 0xba, 0x5e, 0xba, 0x6d,
	0xa2, 0xab, 0xf5, 0x91, 0xba, 0x1a, 0x8a, 0xc8, 0x59, 0x8d, 0x87, 0x91, 0xb9, 0xfd, 0x9f, 0x1c,
	0x9c, 0x1a, 0xca, 0x71, 0x1c, 0xa1, 0xfd, 0x65, 0x80, 0x36, 0x89, 0x48, 0xac, 0x9b, 0x12, 0xfa,
	0x31, 0x9e, 0xa1, 0xc8, 0x87, 0xbf, 0xd7, 0x8d, 0x63, 0x12, 0x09, 0xd7, 0xc0, 0x4f, 0xde, 0xa2,
	0xcb, 0x86, 0x6e, 0xa0, 0x73, 0x19, 0x00, 0xd3, 0x25, 0x25, 0x1d, 0xae, 0x92, 0x31, 0x6a, 0xc0,
	0x09, 0xda, 0x92, 0xe9, 0x8b, 0xf8, 0x6e, 0xe6, 0x3c, 0xfd, 0xd8, 0x44, 0xc9, 0xd4, 0x9d, 0xde,
	0xb9, 0xfd, 0x2f, 0xa3, 0xca, 0xac, 0x2f, 0x23, 0xfb, 0x67, 0x16, 0x9c, 0xda, 0xa0, 0xd1, 0xc3,
	0xa0, 0xfd, 0x3e, 0x9e, 0xf3, 0xb6, 0xdc, 0x56, 0x90, 0x1e, 0x06, 0x6d, 0xb7, 0x83, 0xd9, 0x44,
	0x55, 0x66, 0x7a, 0xb0, 0x53, 0xf1, 0x92, 0x4f, 0xfb, 0x97, 0x96, 0x7a, 0x9a, 0xe8, 0xd1, 0x0c,
	0x26, 0x46, 0x50, 0xe0, 0xc1, 0x0f, 0x49, 0x92, 0x4b, 0xe4, 0xf7, 0x38, 0x23, 0x0f, 0xab, 0xde,
	0x8a, 0x43, 0xab, 0x37, 0xfb, 0x31, 0xd4, 0x52, 0x70, 0x83, 0x99, 0xe1, 0x99, 0xad, 0xa1, 0x19,
	0x3a, 0x7e, 0x2b, 0x90, 0x8f, 0xf1, 0x23, 0x93, 0xf5, 0xe4, 0xa7, 0xfd, 0xbf, 0x1c, 0xbc, 0x30,
	0xe4, 0xe8, 0x59, 0xad, 0x75, 0x84, 0x4d, 0xc8, 0x31, 0x15, 0x2b, 0x7a, 0x00, 0x05, 0x1f, 0x0b,
	0x5c, 0x5b, 0x50, 0x2e, 0xf1, 0xde, 0x64, 0x2e, 0xf1, 0x54, 0xa6, 0xb9, 0x85, 0x05, 0xd6, 0x89,
	0x46, 0xed, 0x86, 0xd6, 0xb5, 0x86, 0x4a, 0x4a, 0xdc, 0xd1, 0xb1, 0xd9, 0xc1, 0x8f, 0x94, 0x0e,
	0xeb, 0x57, 0xa0, 0x92, 0x6e, 0x33, 0x55, 0x36, 0xe9, 0xc2, 0x29, 0xdd, 0x1b, 0x38, 0x5e, 0x9b,
	0xff, 0x3e, 0x0f, 0xab, 0x83, 0xe7, 0xce, 0x6a, 0xf0, 0x67, 0xbf, 0x51, 0x12, 0xa4, 0xf9, 0x67,
	0x21, 0x2d, 0x8c, 0x4e, 0x54, 0xc5, 0x49, 0xee, 0xd3, 0xc2, 0xf0, 0x6e, 0x48, 0x92, 0xd3, 0x4a,
	0x99, 0x9c, 0x76, 0xcf, 0xf8, 0x4b, 0x59, 0xf9, 0xcb, 0xf5, 0x09, 0xba, 0x38, 0x93, 0x3a, 0x4b,
	0xe5, 0x58, 0x9c, 0xe5, 0x12, 0xe4, 0x1d, 0xfc, 0x48, 0x55, 0xee, 0x34, 0xee, 0x60, 0x61, 0xb8,
	0xcc, 0x48, 0x8a, 0xac, 0xc4, 0x33, 0x8e, 0x21, 0xbf, 0xd7, 0xff, 0x74, 0x12, 0x4a, 0xba, 0xcf,
	0xcc, 0xd1, 0x6f, 0x2c, 0x28, 0x6c, 0x50, 0x76, 0x88, 0x2e, 0x8e, 0xb9, 0x29, 0x4f, 0xb5, 0xe1,
	0xeb, 0x97, 0xa6, 0xe0, 0xd0, 0x9a, 0xb2, 0x6f, 0x7c, 0xfa, 0x87, 0x5a, 0xae, 0x6c, 0x7d, 0xfa,
	0xcf, 0xff, 0xfe, 0x22, 0xb7, 0x5e, 0x7f, 0xa3, 0xd1, 0xf7, 0x03, 0x47, 0x6f, 0x93, 0x86, 0xd9,
	0xa4, 0x81, 0x3d, 0xd5, 0x5d, 0x69, 0x78, 0x94, 0x1d, 0x5e, 0xb3, 0x5e, 0x45, 0xbf, 0xb6, 0xa0,
	0xb8, 0x4b, 0x7d, 0xc2, 0xd1, 0xab, 0xa3, 0x0f, 0xcf, 0x76, 0xd1, 0xeb, 0x6f, 0x8c, 0x6d, 0x1f,
	0x67, 0x73, 0x91, 0x7d, 0x3b, 0x03, 0xf2, 0x6d, 0x74, 0x65, 0x2c, 0x48, 0xfd, 0x73, 0x50, 0xe3,
	0x13, 0xe3, 0xe1, 0x4f, 0x1a, 0xaa, 0x47, 0x8e, 0x3e, 0xb7, 0xa0, 0xd0, 0x64, 0x6c, 0x3a, 0xa8,
	0xaf, 0x8f, 0x7b, 0xf6, 0xf5, 0x21, 0xbd, 0x95, 0x41, 0x7a, 0x15, 0x5d, 0x9e, 0x1e, 0xa9, 0x64,
	0x40, 0x5f, 0x98, 0x27, 0x64, 0x63, 0xf2, 0xf7, 0xb8, 0x06, 0x7b, 0x71, 0xda, 0x07, 0xbc, 0xfd,
	0x41, 0x06, 0xf0, 0x36, 0xda, 0x9c, 0x0d, 0x70, 0xe3, 0x93, 0x34, 0x36, 0x3c, 0xd1, 0xdf, 0x4f,
	0xd0, 0x5f, 0x2d, 0x28, 0x35, 0x19, 0xdb, 0xa3, 0x3e, 0x9f, 0x5e, 0x8e, 0xd7, 0xc7, 0x35, 0x43,
	0xfa, 0x94, 0xfe, 0xdd, 0x8c, 0x0c, 0x7b, 0x68, 0xf7, 0xc8, 0x64, 0x68, 0x30, 0x09, 0xfe, 0x8f,
	0x16, 0x40, 0xda, 0xf6, 0x9e, 0xce, 0x77, 0xd6, 0x27, 0x6b, 0xb2, 0xf7, 0x09, 0xb3, 0x95, 0x11,
	0xe6, 0x06, 0x7a, 0x77, 0x06, 0x5f, 0xef, 0x61, 0xfd, 0xad, 0x05, 0x25, 0x1d, 0x21, 0xa7, 0xc3,
	0xdd, 0x98, 0x20, 0xe6, 0xf6, 0x81, 0xbe, 0x93, 0x01, 0xfd, 0x0e, 0x7a, 0x7b, 0x7a, 0xd0, 0xa6,
	0x0b, 0x8f, 0xfe, 0xde, 0xeb, 0xc2, 0xaf, 0x4f, 0x15, 0xf8, 0x35, 0xf0, 0x37, 0x67, 0x48, 0x16,
	0xf6, 0x87, 0x19, 0xf0, 0xbb, 0x68, 0x67, 0x66, 0xf0, 0xc3, 0x6e, 0x81, 0x0c, 0x39, 0x5b, 0xb4,
	0x75, 0x94, 0x21, 0x67, 0xa0, 0xfb, 0x3f, 0x7f, 0xc8, 0xf9, 0x58, 0xe2, 0xfb, 0x5c, 0xf5, 0x6e,
	0xfc, 0xa3, 0x04, 0x3a, 0x78, 0x4d, 0xe7, 0x06, 0xaa, 0xae, 0xe3, 0xef, 0x2c, 0x28, 0x9b, 0x1e,
	0xc6, 0x74, 0x60, 0x2f, 0x4e, 0xd2, 0x16, 0xe9, 0x03, 0xfc, 0xad, 0x0c, 0xe0, 0x77, 0xd1, 0xb5,
	0x59, 0x1c, 0xc3, 0xe0, 0xfc, 0x9b, 0x05, 0xab, 0x43, 0x6b, 0xd8, 0xe9, 0x44, 0xb8, 0x31, 0x7d,
	0x59, 0xdd, 0x27, 0xd0, 0x46, 0x46, 0xa0, 0x2b, 0xe8, 0xad, 0xe9, 0x05, 0x8a, 0x3d, 0x1d, 0x0f,
	0xd3, 0x67, 0xfa, 0x51, 0xc6, 0xc3, 0xa1, 0x75, 0xe8, 0xfc, 0xf1, 0x50, 0x97, 0x96, 0x1d, 0x89,
	0xf5, 0xdf, 0x7d, 0xb5, 0xe5, 0x5b, 0xd3, 0x56, 0x22, 0x5a, 0x88, 0xcb, 0xb3, 0x15, 0x30, 0xf6,
	0xf7, 0x32, 0x82, 0xdc, 0x43, 0x77, 0xe7, 0x11, 0x64, 0x48, 0xa4, 0xb9, 0x79, 0x1d, 0xce, 0x79,
	0xb4, 0xd3, 0xc3, 0x86, 0x59, 0x30, 0x04, 0xdf, 0xcd, 0xaa, 0xb6, 0xc8, 0x5e, 0x4c, 0x05, 0xdd,
	0xb3, 0x3e, 0x2c, 0x19, 0x7a, 0x6b, 0x41, 0x35, 0x63, 0xdf, 0xfc, 0x7f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xb9, 0x03, 0xaa, 0xbf, 0x4b, 0x23, 0x00, 0x00,
}
