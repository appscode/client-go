{
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "NodeNodeCapacity": {
      "properties": {
        "cpu": {
          "format": "int64",
          "type": "integer"
        },
        "memory": {
          "format": "int64",
          "type": "integer"
        },
        "pods": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ServiceLoadBalancerIngress": {
      "properties": {
        "host_name": {
          "format": "string",
          "type": "string"
        },
        "ip": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ServicePort": {
      "properties": {
        "name": {
          "format": "string",
          "type": "string"
        },
        "node_port": {
          "format": "int32",
          "type": "integer"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "protocol": {
          "format": "string",
          "type": "string"
        },
        "target_port": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "alertIcingaState": {
      "properties": {
        "Critical": {
          "format": "int32",
          "type": "integer"
        },
        "OK": {
          "format": "int32",
          "type": "integer"
        },
        "Unknown": {
          "format": "int32",
          "type": "integer"
        },
        "Warning": {
          "format": "int32",
          "type": "integer"
        }
      },
      "title": "This one is used in kubernetes/v0.1/client.proto\nTo send information if alert is set for app/pod",
      "type": "object"
    },
    "dtypesHelp": {
      "properties": {
        "description": {
          "format": "string",
          "title": "Describe what link offers",
          "type": "string"
        },
        "url": {
          "description": "The URL of The link.",
          "format": "string",
          "type": "string"
        }
      },
      "title": "Provides links to documentation or for performing an out of band action.\nNext Id = 3",
      "type": "object"
    },
    "dtypesStatus": {
      "properties": {
        "code": {
          "format": "string",
          "title": "Response status code",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There will be a\ncommon set of message types for APIs to use.",
          "items": {
            "$ref": "#/definitions/protobufAny"
          },
          "type": "array"
        },
        "help": {
          "$ref": "#/definitions/dtypesHelp",
          "description": "Optional. Help link if there is an error."
        },
        "message": {
          "description": "User facing message.",
          "format": "string",
          "type": "string"
        },
        "status": {
          "description": "Response status code string.",
          "format": "string",
          "type": "string"
        }
      },
      "title": "Next Id = 5",
      "type": "object"
    },
    "kubernetesApp": {
      "properties": {
        "cluster_ip": {
          "format": "string",
          "type": "string"
        },
        "created_at": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        },
        "type": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesAppDescribeRequest": {
      "properties": {
        "cluster": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesAppDescribeResponse": {
      "properties": {
        "app": {
          "$ref": "#/definitions/kubernetesService"
        },
        "icinga_state": {
          "$ref": "#/definitions/alertIcingaState"
        },
        "links": {
          "additionalProperties": {
            "format": "string",
            "type": "string"
          },
          "type": "object"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "kubernetesAppListResponse": {
      "properties": {
        "apps": {
          "items": {
            "$ref": "#/definitions/kubernetesApp"
          },
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "kubernetesClientRequest": {
      "properties": {
        "cluster": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesConfigMap": {
      "properties": {
        "created_at": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        },
        "resource_version": {
          "format": "string",
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "kubernetesConfigMapDescribeRequest": {
      "properties": {
        "cluster": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        },
        "raw": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesConfigMapDescribeResponse": {
      "properties": {
        "cluster": {
          "format": "string",
          "type": "string"
        },
        "created_time": {
          "format": "string",
          "type": "string"
        },
        "data": {
          "additionalProperties": {
            "format": "string",
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        },
        "raw": {
          "$ref": "#/definitions/kubernetesRaw"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "kubernetesConfigMapListResponse": {
      "properties": {
        "config_map": {
          "items": {
            "$ref": "#/definitions/kubernetesConfigMap"
          },
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "kubernetesContainer": {
      "properties": {
        "commands": {
          "items": {
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "image": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesCopyResourceRequest": {
      "properties": {
        "destination": {
          "$ref": "#/definitions/kubernetesKubeResource"
        },
        "source": {
          "$ref": "#/definitions/kubernetesKubeResource"
        }
      },
      "type": "object"
    },
    "kubernetesCopyResourceResponse": {
      "properties": {
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "kubernetesJob": {
      "properties": {
        "active": {
          "format": "int32",
          "type": "integer"
        },
        "app": {
          "format": "string",
          "type": "string"
        },
        "completion_time": {
          "format": "string",
          "type": "string"
        },
        "completions": {
          "format": "int32",
          "type": "integer"
        },
        "containers": {
          "items": {
            "$ref": "#/definitions/kubernetesContainer"
          },
          "type": "array"
        },
        "created_at": {
          "format": "string",
          "type": "string"
        },
        "failed": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        },
        "parallelism": {
          "format": "int32",
          "type": "integer"
        },
        "start_time": {
          "format": "string",
          "type": "string"
        },
        "succeeded": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "kubernetesJobListResponse": {
      "properties": {
        "jobs": {
          "items": {
            "$ref": "#/definitions/kubernetesJob"
          },
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "kubernetesKubeResource": {
      "properties": {
        "cluster": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        },
        "type": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesNamespace": {
      "properties": {
        "created_at": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "phase": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesNamespaceListResponse": {
      "properties": {
        "namespaces": {
          "items": {
            "$ref": "#/definitions/kubernetesNamespace"
          },
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "kubernetesNode": {
      "properties": {
        "capacity": {
          "$ref": "#/definitions/NodeNodeCapacity"
        },
        "container_runtime": {
          "format": "string",
          "type": "string"
        },
        "created_at": {
          "format": "string",
          "type": "string"
        },
        "instance_type": {
          "format": "string",
          "type": "string"
        },
        "is_master": {
          "format": "boolean",
          "type": "boolean"
        },
        "kernel_version": {
          "format": "string",
          "type": "string"
        },
        "kubelet_version": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "os_image": {
          "format": "string",
          "type": "string"
        },
        "provider_id": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesNodeListResponse": {
      "properties": {
        "nodes": {
          "items": {
            "$ref": "#/definitions/kubernetesNode"
          },
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "kubernetesPod": {
      "properties": {
        "app": {
          "format": "string",
          "type": "string"
        },
        "containers": {
          "items": {
            "$ref": "#/definitions/kubernetesContainer"
          },
          "type": "array"
        },
        "created_at": {
          "format": "string",
          "type": "string"
        },
        "links": {
          "additionalProperties": {
            "format": "string",
            "type": "string"
          },
          "type": "object"
        },
        "message": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        },
        "node_name": {
          "format": "string",
          "type": "string"
        },
        "phase": {
          "format": "string",
          "type": "string"
        },
        "service_account": {
          "format": "string",
          "type": "string"
        },
        "start_time": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesPodListResponse": {
      "properties": {
        "pods": {
          "items": {
            "$ref": "#/definitions/kubernetesPod"
          },
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "kubernetesRaw": {
      "properties": {
        "data": {
          "format": "string",
          "type": "string"
        },
        "format": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesReplicationController": {
      "properties": {
        "app": {
          "format": "string",
          "type": "string"
        },
        "containers": {
          "items": {
            "$ref": "#/definitions/kubernetesContainer"
          },
          "type": "array"
        },
        "created_at": {
          "format": "string",
          "type": "string"
        },
        "current_replicas": {
          "format": "int32",
          "type": "integer"
        },
        "generation": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        },
        "observed_generation": {
          "format": "int64",
          "type": "integer"
        },
        "replicas": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "kubernetesReplicationControllerListResponse": {
      "properties": {
        "replication_controllers": {
          "items": {
            "$ref": "#/definitions/kubernetesReplicationController"
          },
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "kubernetesSecret": {
      "properties": {
        "created_at": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        },
        "resource_version": {
          "format": "string",
          "type": "string"
        },
        "secret_type": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesSecretDescribeRequest": {
      "properties": {
        "cluster": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        },
        "raw": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesSecretDescribeResponse": {
      "properties": {
        "cluster": {
          "format": "string",
          "type": "string"
        },
        "created_at": {
          "format": "string",
          "type": "string"
        },
        "data": {
          "additionalProperties": {
            "format": "string",
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        },
        "raw": {
          "$ref": "#/definitions/kubernetesRaw"
        },
        "resource_version": {
          "format": "string",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        },
        "type": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesSecretListResponse": {
      "properties": {
        "secrets": {
          "items": {
            "$ref": "#/definitions/kubernetesSecret"
          },
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "kubernetesService": {
      "properties": {
        "app": {
          "format": "string",
          "type": "string"
        },
        "cluster_ip": {
          "format": "string",
          "type": "string"
        },
        "created_at": {
          "format": "string",
          "type": "string"
        },
        "external_ips": {
          "items": {
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "loadbalancer_ingresses": {
          "items": {
            "$ref": "#/definitions/ServiceLoadBalancerIngress"
          },
          "type": "array"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        },
        "ports": {
          "items": {
            "$ref": "#/definitions/ServicePort"
          },
          "type": "array"
        },
        "type": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesServiceListResponse": {
      "properties": {
        "services": {
          "items": {
            "$ref": "#/definitions/kubernetesService"
          },
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "protobufAny": {
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
      "properties": {
        "type_url": {
          "description": "A URL/resource name whose content describes the type of the\nserialized protocol buffer message.\n\nFor URLs which use the scheme `http`, `https`, or no scheme, the\nfollowing restrictions and interpretations apply:\n\n* If no scheme is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n  The name should be in a canonical form (e.g., leading \".\" is\n  not accepted).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics.",
          "format": "string",
          "type": "string"
        },
        "value": {
          "description": "Must be a valid serialized protocol buffer of the above specified type.",
          "format": "byte",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "host": "api.appscode.com",
  "info": {
    "title": "client.proto",
    "version": "0.1"
  },
  "paths": {
    "/appscode/api/kubernetes/v0.1/actions/copy": {
      "put": {
        "operationId": "Copy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kubernetesCopyResourceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/kubernetesCopyResourceResponse"
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/client/{cluster}/apps": {
      "get": {
        "operationId": "Apps",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/kubernetesAppListResponse"
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/client/{cluster}/apps/{namespace}/{name}": {
      "get": {
        "operationId": "App",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          },
          {
            "format": "string",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "format": "string",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/kubernetesAppDescribeResponse"
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/client/{cluster}/apps/{namespace}/{name}/pods": {
      "get": {
        "operationId": "AppPods",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          },
          {
            "format": "string",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "format": "string",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/kubernetesPodListResponse"
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/client/{cluster}/configmaps": {
      "get": {
        "operationId": "ConfigMaps",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/kubernetesConfigMapListResponse"
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/client/{cluster}/configmaps/{namespace}/{name}": {
      "get": {
        "operationId": "ConfigMap",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          },
          {
            "format": "string",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "format": "string",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/kubernetesConfigMapDescribeResponse"
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/client/{cluster}/jobs": {
      "get": {
        "operationId": "Jobs",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/kubernetesJobListResponse"
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/client/{cluster}/namespaces": {
      "get": {
        "operationId": "Namespaces",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/kubernetesNamespaceListResponse"
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/client/{cluster}/nodes": {
      "get": {
        "operationId": "Nodes",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/kubernetesNodeListResponse"
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/client/{cluster}/pods": {
      "get": {
        "operationId": "Pods",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/kubernetesPodListResponse"
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/client/{cluster}/rcs": {
      "get": {
        "operationId": "ReplicationControllers",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/kubernetesReplicationControllerListResponse"
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/client/{cluster}/secrets": {
      "get": {
        "operationId": "Secrets",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/kubernetesSecretListResponse"
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/client/{cluster}/secrets/{namespace}/{name}": {
      "get": {
        "operationId": "Secret",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          },
          {
            "format": "string",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "format": "string",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/kubernetesSecretDescribeResponse"
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/client/{cluster}/services": {
      "get": {
        "operationId": "Services",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/kubernetesServiceListResponse"
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0"
}