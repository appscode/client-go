syntax = "proto3";

package loadbalancer.v1beta1;

option go_package = "v1beta1";

import "google/api/annotations.proto";
import "appscode/api/annotations.proto";
import "api/dtypes/types.proto";

// alert service protobufs for clusters alerts.
service LoadBalancers {
  rpc List(ListRequest) returns (ListResponse) {
    option (google.api.http) = {
      get: "/appscode/api/kubernetes/v1beta1/clusters/{cluster}/loadbalancers"
    };
    option (appscode.api.cors) = {
      enable: true
    };
  }

  rpc Describe(DescribeRequest) returns (DescribeResponse) {
    option (google.api.http) = {
      get: "/appscode/api/kubernetes/v1beta1/clusters/{cluster}/loadbalancers/{name}"
    };
    option (appscode.api.cors) = {
      enable: true
    };
  }

  rpc Create(CreateRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      post: "/appscode/api/kubernetes/v1beta1/clusters/{cluster}/loadbalancers"
      body: "*"
    };
    option (appscode.api.cors) = {
      enable: true
    };
  }

  rpc Update(UpdateRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      put: "/appscode/api/kubernetes/v1beta1/clusters/{cluster}/loadbalancers/{name}"
      body: "*"
    };
    option (appscode.api.cors) = {
      enable: true
    };
  }

  rpc Delete(DeleteRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      delete: "/appscode/api/kubernetes/v1beta1/clusters/{cluster}/loadbalancers/{name}"
    };
    option (appscode.api.cors) = {
      enable: true
    };
  }
}

message ListRequest {
  string cluster = 1;
}

message ListResponse {
  dtypes.Status status = 1;
  repeated LoadBalancer load_balancer = 2;
}

message DescribeRequest {
  string kind = 1;
  string name = 2;
  string namespace = 3;
  string cluster = 4;
}

message DescribeResponse {
  dtypes.Status status = 1;
  LoadBalancer load_balancer = 2;
}

message CreateRequest {
  string name = 1;
  string namespace = 2;
  string cluster = 3;

  LoadBalancer load_balancer = 4;
}

message UpdateRequest {
  string name = 1;
  string cluster = 2;
  LoadBalancer load_balancer = 3;
}

message DeleteRequest {
  string kind = 1;
  string name = 2;
  string namespace = 3;
  string cluster = 4;
}

message LoadBalancer {
  // 'kind' defines is it the regular kubernetes instance or the
  // appscode superset called Extended Ingress. This field will
  // strictly contains only those two values
  // 'ingress' - default kubernetes ingress object.
  // 'extendedIngress' - appscode superset of ingress.
  // when creating a Loadbalancer from UI this field will always
  // be only 'extendedIngress.' List, Describe, Update and Delete
  // will support both two modes.
  // Create will support only extendedIngress.
  // For Creating or Updating an regular ingress one must use the
  // kubectl or direct API calls directly to kubernetes.
  string kind = 1;

  string name = 2;
  string namespace = 3;
  int64 creation_timestamp = 4;
  map<string, string> options = 5;

  Spec spec = 6;
  Status status = 7;

  string json = 8;
}

message Spec {
  HTTPLoadBalancerRule backend = 1;
  repeated LoadBalancerRule rules = 2;
}

message Status {
  repeated LoadBalancerStatus status = 1;
}

message LoadBalancerStatus {
  string IP = 1;
  string host = 2;
}

message LoadBalancerBackend {
  string service_name = 1;
  string service_port = 2;
}

message LoadBalancerRule {
  string host = 1;

  // ssl secret name to enable https on the host.
  // ssl secret must contain data with the certs pem file.
  string SSL_secret_name = 5;
  repeated HTTPLoadBalancerRule http = 2;
  repeated TCPLoadBalancerRule tcp = 3;
}

message HTTPLoadBalancerRule {
  string path = 1;
  LoadBalancerBackend backend = 2;
  repeated string header_rule = 3;
  repeated string rewrite_rule = 4;
}

message TCPLoadBalancerRule {
  string port = 1;
  LoadBalancerBackend backend = 2;
  string SSL_secret_name = 3;
  string secret_pem_name = 4;
}