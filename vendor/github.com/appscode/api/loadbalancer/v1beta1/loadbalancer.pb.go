// Code generated by protoc-gen-go.
// source: loadbalancer.proto
// DO NOT EDIT!

/*
Package v1beta1 is a generated protocol buffer package.

It is generated from these files:
	loadbalancer.proto

It has these top-level messages:
	ListRequest
	ListResponse
	DescribeRequest
	DescribeResponse
	CreateRequest
	UpdateRequest
	DeleteRequest
	LoadBalancer
	Spec
	Status
	LoadBalancerStatus
	LoadBalancerBackend
	LoadBalancerRule
	HTTPLoadBalancerRule
	TCPLoadBalancerRule
*/
package v1beta1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/appscodeapis/appscode/api"
import appscode_dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ListRequest struct {
	Cluster string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ListResponse struct {
	Status       *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	LoadBalancer []*LoadBalancer         `protobuf:"bytes,2,rep,name=load_balancer,json=loadBalancer" json:"load_balancer,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListResponse) GetLoadBalancer() []*LoadBalancer {
	if m != nil {
		return m.LoadBalancer
	}
	return nil
}

type DescribeRequest struct {
	Kind      string `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Cluster   string `protobuf:"bytes,4,opt,name=cluster" json:"cluster,omitempty"`
}

func (m *DescribeRequest) Reset()                    { *m = DescribeRequest{} }
func (m *DescribeRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeRequest) ProtoMessage()               {}
func (*DescribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type DescribeResponse struct {
	Status       *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	LoadBalancer *LoadBalancer           `protobuf:"bytes,2,opt,name=load_balancer,json=loadBalancer" json:"load_balancer,omitempty"`
}

func (m *DescribeResponse) Reset()                    { *m = DescribeResponse{} }
func (m *DescribeResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeResponse) ProtoMessage()               {}
func (*DescribeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DescribeResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeResponse) GetLoadBalancer() *LoadBalancer {
	if m != nil {
		return m.LoadBalancer
	}
	return nil
}

type CreateRequest struct {
	Name         string        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace    string        `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	Cluster      string        `protobuf:"bytes,3,opt,name=cluster" json:"cluster,omitempty"`
	LoadBalancer *LoadBalancer `protobuf:"bytes,4,opt,name=load_balancer,json=loadBalancer" json:"load_balancer,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateRequest) GetLoadBalancer() *LoadBalancer {
	if m != nil {
		return m.LoadBalancer
	}
	return nil
}

type UpdateRequest struct {
	Name         string        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Cluster      string        `protobuf:"bytes,2,opt,name=cluster" json:"cluster,omitempty"`
	LoadBalancer *LoadBalancer `protobuf:"bytes,3,opt,name=load_balancer,json=loadBalancer" json:"load_balancer,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateRequest) GetLoadBalancer() *LoadBalancer {
	if m != nil {
		return m.LoadBalancer
	}
	return nil
}

type DeleteRequest struct {
	Kind      string `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Cluster   string `protobuf:"bytes,4,opt,name=cluster" json:"cluster,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type LoadBalancer struct {
	// 'kind' defines is it the regular kubernetes instance or the
	// appscode superset called Extended Ingress. This field will
	// strictly contains only those two values
	// 'ingress' - default kubernetes ingress object.
	// 'extendedIngress' - appscode superset of ingress.
	// when creating a Loadbalancer from UI this field will always
	// be only 'extendedIngress.' List, Describe, Update and Delete
	// will support both two modes.
	// Create will support only extendedIngress.
	// For Creating or Updating an regular ingress one must use the
	// kubectl or direct API calls directly to kubernetes.
	Kind              string            `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	Name              string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Namespace         string            `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	CreationTimestamp int64             `protobuf:"varint,4,opt,name=creation_timestamp,json=creationTimestamp" json:"creation_timestamp,omitempty"`
	Options           map[string]string `protobuf:"bytes,5,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Spec              *Spec             `protobuf:"bytes,6,opt,name=spec" json:"spec,omitempty"`
	Status            *Status           `protobuf:"bytes,7,opt,name=status" json:"status,omitempty"`
	Json              string            `protobuf:"bytes,8,opt,name=json" json:"json,omitempty"`
}

func (m *LoadBalancer) Reset()                    { *m = LoadBalancer{} }
func (m *LoadBalancer) String() string            { return proto.CompactTextString(m) }
func (*LoadBalancer) ProtoMessage()               {}
func (*LoadBalancer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *LoadBalancer) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *LoadBalancer) GetSpec() *Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *LoadBalancer) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type Spec struct {
	Backend *HTTPLoadBalancerRule `protobuf:"bytes,1,opt,name=backend" json:"backend,omitempty"`
	Rules   []*LoadBalancerRule   `protobuf:"bytes,2,rep,name=rules" json:"rules,omitempty"`
}

func (m *Spec) Reset()                    { *m = Spec{} }
func (m *Spec) String() string            { return proto.CompactTextString(m) }
func (*Spec) ProtoMessage()               {}
func (*Spec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Spec) GetBackend() *HTTPLoadBalancerRule {
	if m != nil {
		return m.Backend
	}
	return nil
}

func (m *Spec) GetRules() []*LoadBalancerRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type Status struct {
	Status []*LoadBalancerStatus `protobuf:"bytes,1,rep,name=status" json:"status,omitempty"`
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Status) GetStatus() []*LoadBalancerStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type LoadBalancerStatus struct {
	IP   string `protobuf:"bytes,1,opt,name=IP" json:"IP,omitempty"`
	Host string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
}

func (m *LoadBalancerStatus) Reset()                    { *m = LoadBalancerStatus{} }
func (m *LoadBalancerStatus) String() string            { return proto.CompactTextString(m) }
func (*LoadBalancerStatus) ProtoMessage()               {}
func (*LoadBalancerStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type LoadBalancerBackend struct {
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	ServicePort string `protobuf:"bytes,2,opt,name=service_port,json=servicePort" json:"service_port,omitempty"`
}

func (m *LoadBalancerBackend) Reset()                    { *m = LoadBalancerBackend{} }
func (m *LoadBalancerBackend) String() string            { return proto.CompactTextString(m) }
func (*LoadBalancerBackend) ProtoMessage()               {}
func (*LoadBalancerBackend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type LoadBalancerRule struct {
	Host string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	// ssl secret name to enable https on the host.
	// ssl secret must contain data with the certs pem file.
	SSLSecretName string                  `protobuf:"bytes,5,opt,name=SSL_secret_name,json=SSLSecretName" json:"SSL_secret_name,omitempty"`
	Http          []*HTTPLoadBalancerRule `protobuf:"bytes,2,rep,name=http" json:"http,omitempty"`
	Tcp           []*TCPLoadBalancerRule  `protobuf:"bytes,3,rep,name=tcp" json:"tcp,omitempty"`
}

func (m *LoadBalancerRule) Reset()                    { *m = LoadBalancerRule{} }
func (m *LoadBalancerRule) String() string            { return proto.CompactTextString(m) }
func (*LoadBalancerRule) ProtoMessage()               {}
func (*LoadBalancerRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *LoadBalancerRule) GetHttp() []*HTTPLoadBalancerRule {
	if m != nil {
		return m.Http
	}
	return nil
}

func (m *LoadBalancerRule) GetTcp() []*TCPLoadBalancerRule {
	if m != nil {
		return m.Tcp
	}
	return nil
}

type HTTPLoadBalancerRule struct {
	Path        string               `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Backend     *LoadBalancerBackend `protobuf:"bytes,2,opt,name=backend" json:"backend,omitempty"`
	HeaderRule  []string             `protobuf:"bytes,3,rep,name=header_rule,json=headerRule" json:"header_rule,omitempty"`
	RewriteRule []string             `protobuf:"bytes,4,rep,name=rewrite_rule,json=rewriteRule" json:"rewrite_rule,omitempty"`
}

func (m *HTTPLoadBalancerRule) Reset()                    { *m = HTTPLoadBalancerRule{} }
func (m *HTTPLoadBalancerRule) String() string            { return proto.CompactTextString(m) }
func (*HTTPLoadBalancerRule) ProtoMessage()               {}
func (*HTTPLoadBalancerRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *HTTPLoadBalancerRule) GetBackend() *LoadBalancerBackend {
	if m != nil {
		return m.Backend
	}
	return nil
}

type TCPLoadBalancerRule struct {
	Port          string               `protobuf:"bytes,1,opt,name=port" json:"port,omitempty"`
	Backend       *LoadBalancerBackend `protobuf:"bytes,2,opt,name=backend" json:"backend,omitempty"`
	SSLSecretName string               `protobuf:"bytes,3,opt,name=SSL_secret_name,json=SSLSecretName" json:"SSL_secret_name,omitempty"`
	SecretPemName string               `protobuf:"bytes,4,opt,name=secret_pem_name,json=secretPemName" json:"secret_pem_name,omitempty"`
}

func (m *TCPLoadBalancerRule) Reset()                    { *m = TCPLoadBalancerRule{} }
func (m *TCPLoadBalancerRule) String() string            { return proto.CompactTextString(m) }
func (*TCPLoadBalancerRule) ProtoMessage()               {}
func (*TCPLoadBalancerRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *TCPLoadBalancerRule) GetBackend() *LoadBalancerBackend {
	if m != nil {
		return m.Backend
	}
	return nil
}

func init() {
	proto.RegisterType((*ListRequest)(nil), "appscode.loadbalancer.v1beta1.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "appscode.loadbalancer.v1beta1.ListResponse")
	proto.RegisterType((*DescribeRequest)(nil), "appscode.loadbalancer.v1beta1.DescribeRequest")
	proto.RegisterType((*DescribeResponse)(nil), "appscode.loadbalancer.v1beta1.DescribeResponse")
	proto.RegisterType((*CreateRequest)(nil), "appscode.loadbalancer.v1beta1.CreateRequest")
	proto.RegisterType((*UpdateRequest)(nil), "appscode.loadbalancer.v1beta1.UpdateRequest")
	proto.RegisterType((*DeleteRequest)(nil), "appscode.loadbalancer.v1beta1.DeleteRequest")
	proto.RegisterType((*LoadBalancer)(nil), "appscode.loadbalancer.v1beta1.LoadBalancer")
	proto.RegisterType((*Spec)(nil), "appscode.loadbalancer.v1beta1.Spec")
	proto.RegisterType((*Status)(nil), "appscode.loadbalancer.v1beta1.Status")
	proto.RegisterType((*LoadBalancerStatus)(nil), "appscode.loadbalancer.v1beta1.LoadBalancerStatus")
	proto.RegisterType((*LoadBalancerBackend)(nil), "appscode.loadbalancer.v1beta1.LoadBalancerBackend")
	proto.RegisterType((*LoadBalancerRule)(nil), "appscode.loadbalancer.v1beta1.LoadBalancerRule")
	proto.RegisterType((*HTTPLoadBalancerRule)(nil), "appscode.loadbalancer.v1beta1.HTTPLoadBalancerRule")
	proto.RegisterType((*TCPLoadBalancerRule)(nil), "appscode.loadbalancer.v1beta1.TCPLoadBalancerRule")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for LoadBalancers service

type LoadBalancersClient interface {
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	Describe(ctx context.Context, in *DescribeRequest, opts ...grpc.CallOption) (*DescribeResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error)
}

type loadBalancersClient struct {
	cc *grpc.ClientConn
}

func NewLoadBalancersClient(cc *grpc.ClientConn) LoadBalancersClient {
	return &loadBalancersClient{cc}
}

func (c *loadBalancersClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/appscode.loadbalancer.v1beta1.LoadBalancers/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadBalancersClient) Describe(ctx context.Context, in *DescribeRequest, opts ...grpc.CallOption) (*DescribeResponse, error) {
	out := new(DescribeResponse)
	err := grpc.Invoke(ctx, "/appscode.loadbalancer.v1beta1.LoadBalancers/Describe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadBalancersClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error) {
	out := new(appscode_dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/appscode.loadbalancer.v1beta1.LoadBalancers/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadBalancersClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error) {
	out := new(appscode_dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/appscode.loadbalancer.v1beta1.LoadBalancers/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadBalancersClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error) {
	out := new(appscode_dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/appscode.loadbalancer.v1beta1.LoadBalancers/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LoadBalancers service

type LoadBalancersServer interface {
	List(context.Context, *ListRequest) (*ListResponse, error)
	Describe(context.Context, *DescribeRequest) (*DescribeResponse, error)
	Create(context.Context, *CreateRequest) (*appscode_dtypes.VoidResponse, error)
	Update(context.Context, *UpdateRequest) (*appscode_dtypes.VoidResponse, error)
	Delete(context.Context, *DeleteRequest) (*appscode_dtypes.VoidResponse, error)
}

func RegisterLoadBalancersServer(s *grpc.Server, srv LoadBalancersServer) {
	s.RegisterService(&_LoadBalancers_serviceDesc, srv)
}

func _LoadBalancers_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancersServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.loadbalancer.v1beta1.LoadBalancers/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancersServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadBalancers_Describe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancersServer).Describe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.loadbalancer.v1beta1.LoadBalancers/Describe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancersServer).Describe(ctx, req.(*DescribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadBalancers_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancersServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.loadbalancer.v1beta1.LoadBalancers/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancersServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadBalancers_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancersServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.loadbalancer.v1beta1.LoadBalancers/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancersServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadBalancers_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancersServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.loadbalancer.v1beta1.LoadBalancers/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancersServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoadBalancers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appscode.loadbalancer.v1beta1.LoadBalancers",
	HandlerType: (*LoadBalancersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _LoadBalancers_List_Handler,
		},
		{
			MethodName: "Describe",
			Handler:    _LoadBalancers_Describe_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _LoadBalancers_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _LoadBalancers_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _LoadBalancers_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("loadbalancer.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1000 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x57, 0x4f, 0x6f, 0x1b, 0x45,
	0x14, 0xd7, 0x78, 0x1d, 0x3b, 0x79, 0xb6, 0x49, 0x3a, 0xad, 0xc4, 0xca, 0x6a, 0x69, 0xbb, 0xa8,
	0xa5, 0x4a, 0xc1, 0xab, 0xb8, 0x07, 0xa2, 0x48, 0x1c, 0xc8, 0x1f, 0x68, 0x90, 0x4b, 0xad, 0x75,
	0xa8, 0x04, 0x1c, 0xac, 0xf1, 0xfa, 0xa9, 0x59, 0x62, 0xef, 0x6c, 0x77, 0xc6, 0x41, 0x51, 0xd5,
	0x4b, 0xbf, 0x00, 0x42, 0x08, 0x71, 0x41, 0xe2, 0xcc, 0xa1, 0x12, 0x17, 0x6e, 0xdc, 0x38, 0xf0,
	0x01, 0x38, 0x73, 0xe3, 0x83, 0xa0, 0x99, 0xd9, 0x8d, 0x77, 0x1b, 0xb7, 0x9b, 0x60, 0xab, 0x97,
	0x64, 0xf6, 0xfd, 0xfd, 0xbd, 0xdf, 0x7b, 0xb3, 0x7e, 0x0b, 0x74, 0xc4, 0xd9, 0x70, 0xc0, 0x46,
	0x2c, 0xf4, 0x31, 0x6e, 0x45, 0x31, 0x97, 0x9c, 0x5e, 0x63, 0x51, 0x24, 0x7c, 0x3e, 0xc4, 0x56,
	0x4e, 0x79, 0xbc, 0x31, 0x40, 0xc9, 0x36, 0x9a, 0x57, 0x1f, 0x73, 0xfe, 0x78, 0x84, 0x2e, 0x8b,
	0x02, 0x97, 0x85, 0x21, 0x97, 0x4c, 0x06, 0x3c, 0x14, 0xc6, 0xb9, 0xf9, 0x4e, 0xea, 0xfc, 0x0a,
	0xfd, 0xf5, 0x9c, 0x7e, 0x28, 0x4f, 0x22, 0x14, 0xae, 0xfe, 0x6b, 0x0c, 0x9c, 0xf7, 0xa0, 0xd6,
	0x09, 0x84, 0xf4, 0xf0, 0xc9, 0x04, 0x85, 0xa4, 0x36, 0x54, 0xfd, 0xd1, 0x44, 0x48, 0x8c, 0x6d,
	0x72, 0x83, 0xdc, 0x59, 0xf1, 0xd2, 0x47, 0xe7, 0x7b, 0x02, 0x75, 0x63, 0x29, 0x22, 0x1e, 0x0a,
	0xa4, 0x2e, 0x54, 0x84, 0x64, 0x72, 0x22, 0xb4, 0x65, 0xad, 0xfd, 0x76, 0xeb, 0xb4, 0x10, 0x93,
	0xa7, 0xd5, 0xd3, 0x6a, 0x2f, 0x31, 0xa3, 0x5d, 0x68, 0xa8, 0x0a, 0xfb, 0x69, 0x89, 0x76, 0xe9,
	0x86, 0x75, 0xa7, 0xd6, 0xbe, 0xdb, 0x7a, 0x2d, 0x01, 0xad, 0x0e, 0x67, 0xc3, 0xed, 0x44, 0xe8,
	0xd5, 0x47, 0x99, 0x27, 0xe7, 0x09, 0xac, 0xee, 0xa2, 0xf0, 0xe3, 0x60, 0x80, 0x69, 0x01, 0x14,
	0xca, 0x47, 0x41, 0x38, 0x4c, 0xd0, 0xeb, 0xb3, 0x92, 0x85, 0x6c, 0x8c, 0x76, 0xc9, 0xc8, 0xd4,
	0x99, 0x5e, 0x85, 0x15, 0xf5, 0x5f, 0x44, 0xcc, 0x47, 0xdb, 0xd2, 0x8a, 0xa9, 0x20, 0x4b, 0x43,
	0x39, 0x4f, 0xc3, 0x8f, 0x04, 0xd6, 0xa6, 0x39, 0x17, 0x48, 0x05, 0x99, 0x8f, 0x8a, 0x17, 0x04,
	0x1a, 0x3b, 0x31, 0x32, 0x99, 0x65, 0x42, 0x57, 0x4d, 0x5e, 0x55, 0x75, 0xe9, 0x35, 0x55, 0x5b,
	0xb9, 0xaa, 0xcf, 0xe2, 0x2d, 0xcf, 0x8b, 0xf7, 0x3b, 0x02, 0x8d, 0x2f, 0xa2, 0x61, 0x01, 0xde,
	0x0c, 0xa2, 0x52, 0x01, 0x22, 0x6b, 0x5e, 0x44, 0x1c, 0x1a, 0xbb, 0x38, 0x42, 0xf9, 0xc6, 0x46,
	0xe9, 0x17, 0x0b, 0xea, 0x59, 0x3c, 0x0b, 0x4a, 0xf8, 0x01, 0x50, 0x5f, 0x0d, 0x42, 0xc0, 0xc3,
	0xbe, 0x0c, 0xc6, 0x28, 0x24, 0x1b, 0x47, 0x3a, 0xb7, 0xe5, 0x5d, 0x4a, 0x35, 0x07, 0xa9, 0x82,
	0x7a, 0x50, 0xe5, 0x91, 0x7e, 0x65, 0xd8, 0x4b, 0xfa, 0x3e, 0x6e, 0x5e, 0x80, 0xc2, 0xd6, 0x43,
	0xe3, 0xba, 0x17, 0xca, 0xf8, 0xc4, 0x4b, 0x03, 0xd1, 0x0f, 0xa1, 0x2c, 0x22, 0xf4, 0xed, 0x8a,
	0xee, 0xc9, 0xbb, 0x05, 0x01, 0x7b, 0x11, 0xfa, 0x9e, 0x76, 0xa0, 0x1f, 0x9d, 0x5e, 0xa4, 0xaa,
	0x76, 0xbd, 0x55, 0xe4, 0x9a, 0xbf, 0x56, 0x14, 0xca, 0xdf, 0x08, 0x1e, 0xda, 0xcb, 0x86, 0x2c,
	0x75, 0x6e, 0x6e, 0x41, 0x3d, 0x0b, 0x92, 0xae, 0x81, 0x75, 0x84, 0x27, 0x09, 0xc7, 0xea, 0x48,
	0xaf, 0xc0, 0xd2, 0x31, 0x1b, 0x4d, 0x52, 0x8e, 0xcd, 0xc3, 0x56, 0x69, 0x93, 0x38, 0x3f, 0x13,
	0x28, 0x2b, 0x74, 0xf4, 0x01, 0x54, 0x07, 0xcc, 0x3f, 0xc2, 0xa4, 0x39, 0xb5, 0xf6, 0xbd, 0x02,
	0x60, 0xf7, 0x0f, 0x0e, 0xba, 0xb9, 0x59, 0x9b, 0x8c, 0xd0, 0x4b, 0x63, 0xd0, 0x3d, 0x58, 0x8a,
	0x27, 0x23, 0x14, 0xc9, 0x1b, 0xd0, 0xbd, 0xc8, 0xd0, 0xaa, 0x40, 0xc6, 0xdb, 0xe9, 0x41, 0xc5,
	0x10, 0x40, 0xf7, 0x33, 0x2f, 0x20, 0x15, 0x71, 0xe3, 0x02, 0x11, 0xf3, 0x1c, 0x3a, 0x9b, 0x40,
	0xcf, 0x6a, 0xe9, 0x5b, 0x50, 0xda, 0xef, 0x26, 0xa4, 0x95, 0xf6, 0xbb, 0x8a, 0xe9, 0x43, 0x2e,
	0x64, 0x3a, 0x96, 0xea, 0xec, 0x7c, 0x0d, 0x97, 0xb3, 0x9e, 0xdb, 0x49, 0xb1, 0x37, 0xa1, 0x2e,
	0x30, 0x3e, 0x0e, 0x7c, 0xec, 0x67, 0xee, 0x77, 0x2d, 0x91, 0x7d, 0xae, 0x06, 0x3a, 0x63, 0x12,
	0xf1, 0x38, 0x8d, 0x9a, 0x9a, 0x74, 0x79, 0x2c, 0x9d, 0x7f, 0x08, 0xac, 0xbd, 0xcc, 0xc3, 0x29,
	0x0a, 0x32, 0x45, 0x41, 0x6f, 0xc3, 0x6a, 0xaf, 0xd7, 0xe9, 0x0b, 0xf4, 0x63, 0x94, 0x26, 0xe3,
	0x92, 0x56, 0x37, 0x7a, 0xbd, 0x4e, 0x4f, 0x4b, 0x75, 0xce, 0x4f, 0xa1, 0x7c, 0x28, 0x65, 0x94,
	0xb4, 0xe0, 0x7f, 0xf5, 0x53, 0x07, 0xa0, 0xbb, 0x60, 0x49, 0x3f, 0xb2, 0x2d, 0x1d, 0xa7, 0x5d,
	0x10, 0xe7, 0x60, 0xe7, 0x6c, 0x18, 0xe5, 0xee, 0xfc, 0x41, 0xe0, 0xca, 0xac, 0x24, 0xaa, 0xc6,
	0x88, 0xc9, 0xc3, 0xb4, 0x46, 0x75, 0xa6, 0x9d, 0xe9, 0x38, 0x9a, 0x1f, 0x8e, 0xf6, 0x05, 0xfa,
	0x9d, 0xf4, 0x65, 0x3a, 0x8d, 0xd7, 0xa1, 0x76, 0x88, 0x6c, 0x88, 0x71, 0x5f, 0x8d, 0x95, 0x2e,
	0x64, 0xc5, 0x03, 0x23, 0xd2, 0x10, 0x6e, 0x42, 0x3d, 0xc6, 0x6f, 0xe3, 0x40, 0xa2, 0xb1, 0x28,
	0x6b, 0x8b, 0x5a, 0x22, 0x53, 0x26, 0xce, 0x5f, 0x04, 0x2e, 0xcf, 0xa8, 0x4d, 0xa3, 0x57, 0x1d,
	0x4d, 0xd1, 0xf3, 0x58, 0x2e, 0x18, 0xfd, 0x8c, 0x7e, 0x5b, 0xb3, 0xfa, 0x7d, 0x1b, 0x56, 0x13,
	0x9b, 0x08, 0xc7, 0xc6, 0xce, 0xbc, 0x8f, 0x1b, 0x46, 0xdc, 0xc5, 0xb1, 0xb2, 0x6b, 0xff, 0x54,
	0x85, 0x46, 0x36, 0xa1, 0xa0, 0xbf, 0x11, 0x28, 0xab, 0xcd, 0x87, 0xae, 0x17, 0xe1, 0x9c, 0x2e,
	0x52, 0xcd, 0xbb, 0xe7, 0xb2, 0x35, 0xfb, 0x83, 0xf3, 0xf0, 0xf9, 0xef, 0x76, 0x69, 0x99, 0x3c,
	0xff, 0xfb, 0xdf, 0x1f, 0x4a, 0x3b, 0xf4, 0x63, 0x37, 0xb7, 0xb4, 0x1d, 0x4d, 0x06, 0x18, 0x87,
	0x28, 0x51, 0xb8, 0x89, 0xb3, 0x9b, 0xfc, 0x82, 0x08, 0xf7, 0x69, 0x72, 0x7a, 0xe6, 0x66, 0x93,
	0x08, 0xfa, 0x27, 0x81, 0xe5, 0x74, 0x4b, 0xa1, 0xad, 0x02, 0x28, 0x2f, 0xad, 0x50, 0x4d, 0xf7,
	0xdc, 0xf6, 0x09, 0xfc, 0x47, 0x19, 0xf8, 0x9f, 0xd1, 0xfb, 0x73, 0xc3, 0x77, 0x9f, 0xaa, 0xf6,
	0x3c, 0xa3, 0xbf, 0x12, 0xa8, 0x98, 0x9d, 0x86, 0xbe, 0x5f, 0x80, 0x29, 0xb7, 0xfa, 0x34, 0xaf,
	0x9d, 0xd9, 0xbf, 0x1e, 0xf1, 0x60, 0x78, 0x8a, 0xd7, 0xcb, 0xe0, 0xfd, 0xc4, 0x99, 0x9f, 0xee,
	0x2d, 0xb2, 0xae, 0x86, 0xa4, 0x62, 0xf6, 0x99, 0x42, 0xac, 0xb9, 0xb5, 0xa7, 0x08, 0xeb, 0x97,
	0x19, 0xac, 0x0f, 0x9a, 0x0b, 0xe3, 0x56, 0x41, 0x7e, 0x41, 0xa0, 0x62, 0x36, 0x9e, 0x42, 0xc8,
	0xb9, 0xc5, 0xa8, 0x08, 0x72, 0x6e, 0x1c, 0xd6, 0x17, 0x06, 0x79, 0x7b, 0x0f, 0x6e, 0xf9, 0x7c,
	0x3c, 0xcd, 0xcd, 0xa2, 0x60, 0x26, 0xda, 0xed, 0x4b, 0xd9, 0xfb, 0xdb, 0x55, 0x9f, 0x39, 0x5d,
	0xf2, 0x55, 0x35, 0xd1, 0x0e, 0x2a, 0xfa, 0xc3, 0xe7, 0xde, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x75, 0x11, 0x75, 0x98, 0x8c, 0x0d, 0x00, 0x00,
}
