// Code generated by protoc-gen-go.
// source: paymentmethod.proto
// DO NOT EDIT!

package v1beta1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for PaymentMethods service

type PaymentMethodsClient interface {
	Check(ctx context.Context, in *dtypes.VoidRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
}

type paymentMethodsClient struct {
	cc *grpc.ClientConn
}

func NewPaymentMethodsClient(cc *grpc.ClientConn) PaymentMethodsClient {
	return &paymentMethodsClient{cc}
}

func (c *paymentMethodsClient) Check(ctx context.Context, in *dtypes.VoidRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/billing.v1beta1.PaymentMethods/Check", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PaymentMethods service

type PaymentMethodsServer interface {
	Check(context.Context, *dtypes.VoidRequest) (*dtypes.VoidResponse, error)
}

func RegisterPaymentMethodsServer(s *grpc.Server, srv PaymentMethodsServer) {
	s.RegisterService(&_PaymentMethods_serviceDesc, srv)
}

func _PaymentMethods_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(dtypes.VoidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMethodsServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/billing.v1beta1.PaymentMethods/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMethodsServer).Check(ctx, req.(*dtypes.VoidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PaymentMethods_serviceDesc = grpc.ServiceDesc{
	ServiceName: "billing.v1beta1.PaymentMethods",
	HandlerType: (*PaymentMethodsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Check",
			Handler:    _PaymentMethods_Check_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor1,
}

func init() { proto.RegisterFile("paymentmethod.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x48, 0xac, 0xcc,
	0x4d, 0xcd, 0x2b, 0xc9, 0x4d, 0x2d, 0xc9, 0xc8, 0x4f, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0xe2, 0x4f, 0xca, 0xcc, 0xc9, 0xc9, 0xcc, 0x4b, 0xd7, 0x2b, 0x33, 0x4c, 0x4a, 0x2d, 0x49, 0x34,
	0x94, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb,
	0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0x28, 0x97, 0x12, 0x03, 0x09, 0xa7, 0x94,
	0x54, 0x16, 0xa4, 0x16, 0xeb, 0x83, 0x49, 0x88, 0xb8, 0x51, 0x15, 0x17, 0x5f, 0x00, 0xc4, 0x74,
	0x5f, 0xb0, 0xe9, 0xc5, 0x42, 0x19, 0x5c, 0xac, 0xce, 0x19, 0xa9, 0xc9, 0xd9, 0x42, 0xc2, 0x7a,
	0x10, 0xf5, 0x7a, 0x61, 0xf9, 0x99, 0x29, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x52, 0x22,
	0xa8, 0x82, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x4a, 0x26, 0x4d, 0x97, 0x9f, 0x4c, 0x66, 0xd2,
	0x13, 0xd2, 0xd1, 0x4f, 0x2c, 0x28, 0x28, 0x4e, 0xce, 0x4f, 0x81, 0x38, 0x03, 0xea, 0x44, 0x7d,
	0xa8, 0x13, 0xf5, 0x51, 0xfc, 0x51, 0xec, 0xc4, 0x19, 0xc5, 0x0e, 0x95, 0x49, 0x62, 0x03, 0xbb,
	0xc6, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x6c, 0x4a, 0xc3, 0x4a, 0xeb, 0x00, 0x00, 0x00,
}
