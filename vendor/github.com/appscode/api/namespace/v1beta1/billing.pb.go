// Code generated by protoc-gen-go.
// source: billing.proto
// DO NOT EDIT!

/*
Package v1beta1 is a generated protocol buffer package.

It is generated from these files:
	billing.proto
	team.proto

It has these top-level messages:
	GetSubscriptionResponse
	SubscribeRequest
	GetQuotaResponse
	CreateClientTokenResponse
	CreateRequest
	CreateResponse
	GetRequest
	GetResponse
	IsAvailableRequest
*/
package v1beta1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/appscodeapis/appscode/api"
import appscode_dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetSubscriptionResponse struct {
	Status     *appscode_dtypes.Status          `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Product    *GetSubscriptionResponse_Product `protobuf:"bytes,2,opt,name=product" json:"product,omitempty"`
	AutoExtend bool                             `protobuf:"varint,3,opt,name=auto_extend,json=autoExtend" json:"auto_extend,omitempty"`
	Quota      string                           `protobuf:"bytes,4,opt,name=quota" json:"quota,omitempty"`
	DateStart  int64                            `protobuf:"varint,5,opt,name=date_start,json=dateStart" json:"date_start,omitempty"`
	DateEnd    int64                            `protobuf:"varint,6,opt,name=date_end,json=dateEnd" json:"date_end,omitempty"`
}

func (m *GetSubscriptionResponse) Reset()                    { *m = GetSubscriptionResponse{} }
func (m *GetSubscriptionResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSubscriptionResponse) ProtoMessage()               {}
func (*GetSubscriptionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetSubscriptionResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetSubscriptionResponse) GetProduct() *GetSubscriptionResponse_Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *GetSubscriptionResponse) GetAutoExtend() bool {
	if m != nil {
		return m.AutoExtend
	}
	return false
}

func (m *GetSubscriptionResponse) GetQuota() string {
	if m != nil {
		return m.Quota
	}
	return ""
}

func (m *GetSubscriptionResponse) GetDateStart() int64 {
	if m != nil {
		return m.DateStart
	}
	return 0
}

func (m *GetSubscriptionResponse) GetDateEnd() int64 {
	if m != nil {
		return m.DateEnd
	}
	return 0
}

type GetSubscriptionResponse_Product struct {
	Sku          string `protobuf:"bytes,1,opt,name=sku" json:"sku,omitempty"`
	Type         string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	DisplayName  string `protobuf:"bytes,3,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	PricingModel string `protobuf:"bytes,4,opt,name=pricing_model,json=pricingModel" json:"pricing_model,omitempty"`
}

func (m *GetSubscriptionResponse_Product) Reset()         { *m = GetSubscriptionResponse_Product{} }
func (m *GetSubscriptionResponse_Product) String() string { return proto.CompactTextString(m) }
func (*GetSubscriptionResponse_Product) ProtoMessage()    {}
func (*GetSubscriptionResponse_Product) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

func (m *GetSubscriptionResponse_Product) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *GetSubscriptionResponse_Product) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *GetSubscriptionResponse_Product) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *GetSubscriptionResponse_Product) GetPricingModel() string {
	if m != nil {
		return m.PricingModel
	}
	return ""
}

type SubscribeRequest struct {
	ProductId  string `protobuf:"bytes,1,opt,name=product_id,json=productId" json:"product_id,omitempty"`
	AutoExtend bool   `protobuf:"varint,2,opt,name=auto_extend,json=autoExtend" json:"auto_extend,omitempty"`
	StartTime  int64  `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
}

func (m *SubscribeRequest) Reset()                    { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string            { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()               {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SubscribeRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *SubscribeRequest) GetAutoExtend() bool {
	if m != nil {
		return m.AutoExtend
	}
	return false
}

func (m *SubscribeRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

type GetQuotaResponse struct {
	Status   *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Assigned map[string]int64        `protobuf:"bytes,2,rep,name=assigned" json:"assigned,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Used     map[string]int64        `protobuf:"bytes,3,rep,name=used" json:"used,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *GetQuotaResponse) Reset()                    { *m = GetQuotaResponse{} }
func (m *GetQuotaResponse) String() string            { return proto.CompactTextString(m) }
func (*GetQuotaResponse) ProtoMessage()               {}
func (*GetQuotaResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetQuotaResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetQuotaResponse) GetAssigned() map[string]int64 {
	if m != nil {
		return m.Assigned
	}
	return nil
}

func (m *GetQuotaResponse) GetUsed() map[string]int64 {
	if m != nil {
		return m.Used
	}
	return nil
}

type CreateClientTokenResponse struct {
	Status *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Token  string                  `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *CreateClientTokenResponse) Reset()                    { *m = CreateClientTokenResponse{} }
func (m *CreateClientTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateClientTokenResponse) ProtoMessage()               {}
func (*CreateClientTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateClientTokenResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreateClientTokenResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*GetSubscriptionResponse)(nil), "appscode.namespace.v1beta1.GetSubscriptionResponse")
	proto.RegisterType((*GetSubscriptionResponse_Product)(nil), "appscode.namespace.v1beta1.GetSubscriptionResponse.Product")
	proto.RegisterType((*SubscribeRequest)(nil), "appscode.namespace.v1beta1.SubscribeRequest")
	proto.RegisterType((*GetQuotaResponse)(nil), "appscode.namespace.v1beta1.GetQuotaResponse")
	proto.RegisterType((*CreateClientTokenResponse)(nil), "appscode.namespace.v1beta1.CreateClientTokenResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Billing service

type BillingClient interface {
	// Checks current subscription of a namespace
	GetSubscription(ctx context.Context, in *appscode_dtypes.VoidRequest, opts ...grpc.CallOption) (*GetSubscriptionResponse, error)
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error)
	GetQuota(ctx context.Context, in *appscode_dtypes.VoidRequest, opts ...grpc.CallOption) (*GetQuotaResponse, error)
	CreateClientToken(ctx context.Context, in *appscode_dtypes.VoidRequest, opts ...grpc.CallOption) (*CreateClientTokenResponse, error)
	CheckPaymentMethod(ctx context.Context, in *appscode_dtypes.VoidRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error)
}

type billingClient struct {
	cc *grpc.ClientConn
}

func NewBillingClient(cc *grpc.ClientConn) BillingClient {
	return &billingClient{cc}
}

func (c *billingClient) GetSubscription(ctx context.Context, in *appscode_dtypes.VoidRequest, opts ...grpc.CallOption) (*GetSubscriptionResponse, error) {
	out := new(GetSubscriptionResponse)
	err := grpc.Invoke(ctx, "/appscode.namespace.v1beta1.Billing/GetSubscription", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error) {
	out := new(appscode_dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/appscode.namespace.v1beta1.Billing/Subscribe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingClient) GetQuota(ctx context.Context, in *appscode_dtypes.VoidRequest, opts ...grpc.CallOption) (*GetQuotaResponse, error) {
	out := new(GetQuotaResponse)
	err := grpc.Invoke(ctx, "/appscode.namespace.v1beta1.Billing/GetQuota", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingClient) CreateClientToken(ctx context.Context, in *appscode_dtypes.VoidRequest, opts ...grpc.CallOption) (*CreateClientTokenResponse, error) {
	out := new(CreateClientTokenResponse)
	err := grpc.Invoke(ctx, "/appscode.namespace.v1beta1.Billing/CreateClientToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingClient) CheckPaymentMethod(ctx context.Context, in *appscode_dtypes.VoidRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error) {
	out := new(appscode_dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/appscode.namespace.v1beta1.Billing/CheckPaymentMethod", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Billing service

type BillingServer interface {
	// Checks current subscription of a namespace
	GetSubscription(context.Context, *appscode_dtypes.VoidRequest) (*GetSubscriptionResponse, error)
	Subscribe(context.Context, *SubscribeRequest) (*appscode_dtypes.VoidResponse, error)
	GetQuota(context.Context, *appscode_dtypes.VoidRequest) (*GetQuotaResponse, error)
	CreateClientToken(context.Context, *appscode_dtypes.VoidRequest) (*CreateClientTokenResponse, error)
	CheckPaymentMethod(context.Context, *appscode_dtypes.VoidRequest) (*appscode_dtypes.VoidResponse, error)
}

func RegisterBillingServer(s *grpc.Server, srv BillingServer) {
	s.RegisterService(&_Billing_serviceDesc, srv)
}

func _Billing_GetSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(appscode_dtypes.VoidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServer).GetSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.namespace.v1beta1.Billing/GetSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServer).GetSubscription(ctx, req.(*appscode_dtypes.VoidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Billing_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.namespace.v1beta1.Billing/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServer).Subscribe(ctx, req.(*SubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Billing_GetQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(appscode_dtypes.VoidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServer).GetQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.namespace.v1beta1.Billing/GetQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServer).GetQuota(ctx, req.(*appscode_dtypes.VoidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Billing_CreateClientToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(appscode_dtypes.VoidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServer).CreateClientToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.namespace.v1beta1.Billing/CreateClientToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServer).CreateClientToken(ctx, req.(*appscode_dtypes.VoidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Billing_CheckPaymentMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(appscode_dtypes.VoidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServer).CheckPaymentMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.namespace.v1beta1.Billing/CheckPaymentMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServer).CheckPaymentMethod(ctx, req.(*appscode_dtypes.VoidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Billing_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appscode.namespace.v1beta1.Billing",
	HandlerType: (*BillingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSubscription",
			Handler:    _Billing_GetSubscription_Handler,
		},
		{
			MethodName: "Subscribe",
			Handler:    _Billing_Subscribe_Handler,
		},
		{
			MethodName: "GetQuota",
			Handler:    _Billing_GetQuota_Handler,
		},
		{
			MethodName: "CreateClientToken",
			Handler:    _Billing_CreateClientToken_Handler,
		},
		{
			MethodName: "CheckPaymentMethod",
			Handler:    _Billing_CheckPaymentMethod_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "billing.proto",
}

func init() { proto.RegisterFile("billing.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 760 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x95, 0xcd, 0x4e, 0xdb, 0x4a,
	0x14, 0xc7, 0xe5, 0x04, 0x92, 0xf8, 0x04, 0x74, 0xb9, 0x23, 0x24, 0x82, 0x05, 0x97, 0x5c, 0x77,
	0x13, 0x55, 0xd4, 0x16, 0xd0, 0xd2, 0x2a, 0x40, 0xd5, 0x82, 0x28, 0x05, 0x89, 0x2a, 0x35, 0x1f,
	0x8b, 0x6e, 0xa2, 0x89, 0x3d, 0x0a, 0xd3, 0x24, 0x1e, 0x93, 0x19, 0xd3, 0x66, 0xcb, 0xb6, 0xcb,
	0x76, 0x5b, 0xa9, 0x6f, 0x50, 0xa9, 0x52, 0x5f, 0xa2, 0xdb, 0xae, 0xbb, 0xeb, 0x83, 0x54, 0x33,
	0x9e, 0xa4, 0x84, 0x28, 0x84, 0x8f, 0x8d, 0xe5, 0x39, 0xc7, 0xe7, 0x3f, 0xbf, 0xf3, 0x31, 0x63,
	0x98, 0xac, 0xd1, 0x66, 0x93, 0x86, 0x75, 0x27, 0x6a, 0x33, 0xc1, 0x90, 0x85, 0xa3, 0x88, 0xfb,
	0x2c, 0x20, 0x4e, 0x88, 0x5b, 0x84, 0x47, 0xd8, 0x27, 0xce, 0xd9, 0x52, 0x8d, 0x08, 0xbc, 0x64,
	0xcd, 0xd5, 0x19, 0xab, 0x37, 0x89, 0x8b, 0x23, 0xea, 0xe2, 0x30, 0x64, 0x02, 0x0b, 0xca, 0x42,
	0x9e, 0x44, 0x5a, 0xff, 0x75, 0x23, 0x87, 0xf8, 0x17, 0xfa, 0xfc, 0x81, 0xe8, 0x44, 0x84, 0xbb,
	0xea, 0x99, 0x7c, 0x60, 0x7f, 0x48, 0xc3, 0xcc, 0x0e, 0x11, 0x07, 0x71, 0x8d, 0xfb, 0x6d, 0x1a,
	0xc9, 0x58, 0x8f, 0xf0, 0x88, 0x85, 0x9c, 0x20, 0x17, 0x32, 0x5c, 0x60, 0x11, 0xf3, 0x82, 0x51,
	0x34, 0x4a, 0xf9, 0xe5, 0x19, 0xa7, 0xc7, 0x99, 0x28, 0x39, 0x07, 0xca, 0xed, 0xe9, 0xcf, 0xd0,
	0x11, 0x64, 0xa3, 0x36, 0x0b, 0x62, 0x5f, 0x14, 0x52, 0x2a, 0x62, 0xcd, 0x19, 0x9e, 0x99, 0x33,
	0x64, 0x5b, 0xa7, 0x92, 0x48, 0x78, 0x5d, 0x2d, 0xb4, 0x00, 0x79, 0x1c, 0x0b, 0x56, 0x25, 0xef,
	0x05, 0x09, 0x83, 0x42, 0xba, 0x68, 0x94, 0x72, 0x1e, 0x48, 0xd3, 0xb6, 0xb2, 0xa0, 0x69, 0x18,
	0x3f, 0x8d, 0x99, 0xc0, 0x85, 0xb1, 0xa2, 0x51, 0x32, 0xbd, 0x64, 0x81, 0xe6, 0x01, 0x02, 0x2c,
	0x48, 0x95, 0x0b, 0xdc, 0x16, 0x85, 0xf1, 0xa2, 0x51, 0x4a, 0x7b, 0xa6, 0xb4, 0x1c, 0x48, 0x03,
	0x9a, 0x85, 0x9c, 0x72, 0x4b, 0xc9, 0x8c, 0x72, 0x66, 0xe5, 0x7a, 0x3b, 0x0c, 0xac, 0x77, 0x90,
	0xd5, 0x10, 0x68, 0x0a, 0xd2, 0xbc, 0x11, 0xab, 0x02, 0x98, 0x9e, 0x7c, 0x45, 0x08, 0xc6, 0x64,
	0xf2, 0x2a, 0x43, 0xd3, 0x53, 0xef, 0xe8, 0x7f, 0x98, 0x08, 0x28, 0x8f, 0x9a, 0xb8, 0x53, 0x95,
	0x79, 0x2a, 0x44, 0xd3, 0xcb, 0x6b, 0xdb, 0x2b, 0xdc, 0x22, 0xe8, 0x1e, 0x4c, 0x46, 0x6d, 0xea,
	0xd3, 0xb0, 0x5e, 0x6d, 0xb1, 0x80, 0x34, 0x35, 0xeb, 0x84, 0x36, 0xee, 0x4b, 0x9b, 0x7d, 0x0a,
	0x53, 0xba, 0x24, 0x35, 0xe2, 0x91, 0xd3, 0x98, 0x70, 0x21, 0xd3, 0xd0, 0x85, 0xa8, 0xd2, 0x40,
	0x83, 0x98, 0xda, 0xb2, 0x1b, 0x5c, 0x2e, 0x4e, 0x6a, 0xa0, 0x38, 0xf3, 0x00, 0xaa, 0x02, 0x55,
	0x41, 0x35, 0x59, 0xda, 0x33, 0x95, 0xe5, 0x90, 0xb6, 0x88, 0xfd, 0x2b, 0x05, 0x53, 0x3b, 0x44,
	0xbc, 0x96, 0x25, 0xbb, 0x7d, 0xe7, 0x8f, 0x21, 0x87, 0x39, 0xa7, 0xf5, 0x90, 0x48, 0x84, 0x74,
	0x29, 0xbf, 0x5c, 0x1e, 0xd1, 0xfa, 0xbe, 0x0d, 0x9d, 0xe7, 0x3a, 0x78, 0x3b, 0x14, 0xed, 0x8e,
	0xd7, 0xd3, 0x42, 0x7b, 0x30, 0x16, 0x73, 0x22, 0x7b, 0x2e, 0x35, 0x57, 0x6f, 0xa4, 0x79, 0xc4,
	0xbb, 0x7a, 0x4a, 0xc3, 0x5a, 0x83, 0xc9, 0xbe, 0x6d, 0x64, 0x6f, 0x1b, 0xa4, 0xd3, 0xed, 0x6d,
	0x83, 0x74, 0xe4, 0x20, 0x9d, 0xe1, 0x66, 0x9c, 0x34, 0x37, 0xed, 0x25, 0x8b, 0x72, 0xea, 0x89,
	0x61, 0x3d, 0x06, 0xb3, 0xa7, 0x77, 0x93, 0x40, 0xbb, 0x06, 0xb3, 0x5b, 0x6d, 0x82, 0x05, 0xd9,
	0x6a, 0x52, 0x12, 0x8a, 0x43, 0xd6, 0x20, 0x77, 0x38, 0x61, 0xd3, 0x30, 0x2e, 0xa4, 0x82, 0x9e,
	0xbe, 0x64, 0xb1, 0xfc, 0x23, 0x03, 0xd9, 0xcd, 0xe4, 0x46, 0x41, 0x5f, 0x0d, 0xf8, 0xe7, 0xd2,
	0xc9, 0x42, 0x73, 0x03, 0xb2, 0xc7, 0x8c, 0x06, 0x7a, 0xc0, 0xac, 0x95, 0x5b, 0x1c, 0x52, 0x7b,
	0xf7, 0xfc, 0x7b, 0x21, 0x95, 0x33, 0xce, 0x7f, 0xfe, 0xfe, 0x98, 0xda, 0x40, 0x6b, 0x6e, 0xb5,
	0xef, 0xa2, 0xe9, 0xe9, 0xb8, 0x5a, 0xc7, 0xd5, 0x17, 0x9e, 0xcb, 0x2f, 0x88, 0x71, 0xf7, 0x2d,
	0x67, 0x21, 0xfa, 0x62, 0x80, 0xd9, 0x9b, 0x7a, 0xb4, 0x78, 0x15, 0xcd, 0xe5, 0xc3, 0x61, 0xcd,
	0x0f, 0xc9, 0x4c, 0x53, 0xbe, 0x50, 0x7c, 0xcf, 0xec, 0xbb, 0xf0, 0x95, 0x8d, 0xfb, 0xe8, 0x93,
	0x01, 0xb9, 0xee, 0x7c, 0x8d, 0xa8, 0xe6, 0xe2, 0x4d, 0x66, 0xd4, 0x5e, 0x57, 0x80, 0xab, 0xe8,
	0xe1, 0xb5, 0x01, 0xd5, 0xdd, 0xa6, 0x2b, 0xf7, 0xcd, 0x80, 0x7f, 0x07, 0x86, 0x6b, 0x04, 0xdf,
	0xa3, 0xab, 0xf8, 0x86, 0x4e, 0xaa, 0xfd, 0xf2, 0x42, 0xbf, 0xd7, 0x51, 0xf9, 0xda, 0xb8, 0xbe,
	0xd2, 0x7a, 0xa0, 0xe6, 0x34, 0x81, 0xfe, 0x6c, 0x00, 0xda, 0x3a, 0x21, 0x7e, 0xa3, 0x82, 0x3b,
	0x2d, 0x12, 0x8a, 0x7d, 0x22, 0x4e, 0x58, 0x30, 0x82, 0x7a, 0x44, 0x9f, 0xf7, 0x2e, 0xd0, 0x3d,
	0x45, 0xeb, 0xd7, 0xa6, 0x8b, 0x12, 0x84, 0x96, 0x42, 0x48, 0x8a, 0xba, 0xb9, 0x01, 0xb6, 0xcf,
	0x5a, 0x7f, 0xf7, 0xc3, 0x11, 0x1d, 0xac, 0xd4, 0xe6, 0x84, 0x3e, 0x6f, 0x15, 0xf9, 0x17, 0xad,
	0x18, 0x6f, 0xb2, 0xda, 0x51, 0xcb, 0xa8, 0xff, 0xea, 0xca, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xd3, 0x70, 0xbd, 0x8d, 0xe3, 0x07, 0x00, 0x00,
}
