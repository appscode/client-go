syntax = "proto3";

package db.v1beta1;

option go_package = "v1beta1";

import "google/api/annotations.proto";
import "api/dtypes/types.proto";

service Databases {
  rpc List(DatabaseListRequest) returns (DatabaseListResponse) {
    option (google.api.http) = {
      get: "/appscode/api/db/v1beta1/databases"
    };
  }

  rpc Create(CreateRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      post : "/appscode/api/db/v1beta1/databases/{cluster}"
      body : "*"
    };
  }

  rpc Scale(ScaleRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      put: "/appscode/api/db/v1beta1/databases/{cluster}/{uid}/scale"
      body: "*"
    };
  }

  rpc Update(UpdateRequest) returns (dtypes.VoidResponse) {
  option (google.api.http) = {
      put: "/appscode/api/db/v1beta1/databases/{cluster}/{uid}"
      body: "*"
    };
  }

  rpc Describe(DescribeRequest) returns (DescribeResponse) {
    option (google.api.http) = {
      get: "/appscode/api/db/v1beta1/databases/{cluster}/{uid}"
    };
  }

  rpc Delete(DeleteRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      delete: "/appscode/api/db/v1beta1/databases/{cluster}/{uid}"
    };
  }
}

// Next Id: 19
message Database {
  string phid = 1;
  string cluster = 2;
  string name = 3;
  string type = 5;
  string sku = 6;
  string version = 8;
  string auth_secret = 9;
  string schedule_cron_expr = 10;
  int64 pv_size = 11;
  string last_backup = 12;
  string status = 13;
  int64 created_at = 14;
  int64 deleted_at = 15;
  string service_name = 16;
  bool do_not_delete = 17;
  string provider = 18;
}

// Next Id: 3
message DatabaseListRequest {
  string type = 1;

  // List of status to get the agent filterd on the status
  // values in
  //   PENDING
  //   FAILED
  //   READY
  //   DELETING
  //   DELETED
  //   DESTROYED
  repeated string status = 2;
}

// Next Id: 3
message DatabaseListResponse {
  dtypes.Status status = 1;
  repeated Database databases = 2;
}

// Next Id: 15
message CreateRequest {
  string cluster = 1;
  string service_name = 2;
  string type = 3;
  string sku = 4;
  string version = 5;
  int64 pv_size = 7;
  string auth_secret_name = 8;
  int64 size = 9;
  string snapshot_phid = 14;
  string hostname = 15;
}

// Next Id: 4
message ScaleRequest {
  string cluster = 1;
  string uid = 2;
  int64 size = 3;
}

// Next Id: 4
message UpdateRequest {
  string cluster = 1;
  string uid = 2;
  bool do_not_delete = 3;
}

// Next Id: 3
message DescribeRequest {
  string cluster = 1;
  string uid = 2;
}

// Next Id: 7
message SnapshotSummary {
  int64 backup_attempt = 3;
  int64 backup_success = 4;
  int64 restore_attempt = 5;
  int64 restore_success = 6;
}

// Next Id: 17
message DescribeResponse {
  dtypes.Status status = 1;
  SnapshotSummary snapshot_summary = 9;
  Database databases = 16;
}

// Next Id: 3
message DeleteRequest {
  string cluster = 1;
  string uid = 2;
}

// Next Id: 4
message DatabaseCheckRequest {
  string cluster = 1;
  string uid = 2;
  string purchase_phid = 3;
}
