// Code generated by protoc-gen-go.
// source: build.proto
// DO NOT EDIT!

package v1beta1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/appscodeapis/appscode/api"
import appscode_dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BuildDescribeRequest struct {
	JobName string `protobuf:"bytes,1,opt,name=job_name,json=jobName" json:"job_name,omitempty"`
	Parents string `protobuf:"bytes,2,opt,name=parents" json:"parents,omitempty"`
	Number  int64  `protobuf:"varint,3,opt,name=number" json:"number,omitempty"`
}

func (m *BuildDescribeRequest) Reset()                    { *m = BuildDescribeRequest{} }
func (m *BuildDescribeRequest) String() string            { return proto.CompactTextString(m) }
func (*BuildDescribeRequest) ProtoMessage()               {}
func (*BuildDescribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type BuildDescribeResponse struct {
	Status            *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	JobName           string                  `protobuf:"bytes,2,opt,name=job_name,json=jobName" json:"job_name,omitempty"`
	Parents           string                  `protobuf:"bytes,3,opt,name=parents" json:"parents,omitempty"`
	BuildNumber       int64                   `protobuf:"varint,4,opt,name=build_number,json=buildNumber" json:"build_number,omitempty"`
	BaseUrl           string                  `protobuf:"bytes,5,opt,name=base_url,json=baseUrl" json:"base_url,omitempty"`
	Building          bool                    `protobuf:"varint,6,opt,name=building" json:"building,omitempty"`
	BuiltOn           string                  `protobuf:"bytes,7,opt,name=built_on,json=builtOn" json:"built_on,omitempty"`
	Duration          int64                   `protobuf:"varint,8,opt,name=duration" json:"duration,omitempty"`
	EstimatedDuration int64                   `protobuf:"varint,9,opt,name=estimated_duration,json=estimatedDuration" json:"estimated_duration,omitempty"`
	FullDisplayName   string                  `protobuf:"bytes,10,opt,name=full_display_name,json=fullDisplayName" json:"full_display_name,omitempty"`
	Result            string                  `protobuf:"bytes,11,opt,name=result" json:"result,omitempty"`
	ConsoleOutput     string                  `protobuf:"bytes,12,opt,name=console_output,json=consoleOutput" json:"console_output,omitempty"`
}

func (m *BuildDescribeResponse) Reset()                    { *m = BuildDescribeResponse{} }
func (m *BuildDescribeResponse) String() string            { return proto.CompactTextString(m) }
func (*BuildDescribeResponse) ProtoMessage()               {}
func (*BuildDescribeResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *BuildDescribeResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type BuildListRequest struct {
	JobName string `protobuf:"bytes,1,opt,name=job_name,json=jobName" json:"job_name,omitempty"`
	Parents string `protobuf:"bytes,2,opt,name=parents" json:"parents,omitempty"`
}

func (m *BuildListRequest) Reset()                    { *m = BuildListRequest{} }
func (m *BuildListRequest) String() string            { return proto.CompactTextString(m) }
func (*BuildListRequest) ProtoMessage()               {}
func (*BuildListRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type BuildListResponse struct {
	Status  *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	JobName string                  `protobuf:"bytes,2,opt,name=job_name,json=jobName" json:"job_name,omitempty"`
	Parents string                  `protobuf:"bytes,3,opt,name=parents" json:"parents,omitempty"`
	Builds  []*Build                `protobuf:"bytes,4,rep,name=builds" json:"builds,omitempty"`
}

func (m *BuildListResponse) Reset()                    { *m = BuildListResponse{} }
func (m *BuildListResponse) String() string            { return proto.CompactTextString(m) }
func (*BuildListResponse) ProtoMessage()               {}
func (*BuildListResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *BuildListResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *BuildListResponse) GetBuilds() []*Build {
	if m != nil {
		return m.Builds
	}
	return nil
}

type Build struct {
	Number    int64  `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *Build) Reset()                    { *m = Build{} }
func (m *Build) String() string            { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()               {}
func (*Build) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func init() {
	proto.RegisterType((*BuildDescribeRequest)(nil), "appscode.ci.v1beta1.BuildDescribeRequest")
	proto.RegisterType((*BuildDescribeResponse)(nil), "appscode.ci.v1beta1.BuildDescribeResponse")
	proto.RegisterType((*BuildListRequest)(nil), "appscode.ci.v1beta1.BuildListRequest")
	proto.RegisterType((*BuildListResponse)(nil), "appscode.ci.v1beta1.BuildListResponse")
	proto.RegisterType((*Build)(nil), "appscode.ci.v1beta1.Build")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Builds service

type BuildsClient interface {
	Describe(ctx context.Context, in *BuildDescribeRequest, opts ...grpc.CallOption) (*BuildDescribeResponse, error)
	List(ctx context.Context, in *BuildListRequest, opts ...grpc.CallOption) (*BuildListResponse, error)
}

type buildsClient struct {
	cc *grpc.ClientConn
}

func NewBuildsClient(cc *grpc.ClientConn) BuildsClient {
	return &buildsClient{cc}
}

func (c *buildsClient) Describe(ctx context.Context, in *BuildDescribeRequest, opts ...grpc.CallOption) (*BuildDescribeResponse, error) {
	out := new(BuildDescribeResponse)
	err := grpc.Invoke(ctx, "/appscode.ci.v1beta1.Builds/Describe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildsClient) List(ctx context.Context, in *BuildListRequest, opts ...grpc.CallOption) (*BuildListResponse, error) {
	out := new(BuildListResponse)
	err := grpc.Invoke(ctx, "/appscode.ci.v1beta1.Builds/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Builds service

type BuildsServer interface {
	Describe(context.Context, *BuildDescribeRequest) (*BuildDescribeResponse, error)
	List(context.Context, *BuildListRequest) (*BuildListResponse, error)
}

func RegisterBuildsServer(s *grpc.Server, srv BuildsServer) {
	s.RegisterService(&_Builds_serviceDesc, srv)
}

func _Builds_Describe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildDescribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildsServer).Describe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.ci.v1beta1.Builds/Describe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildsServer).Describe(ctx, req.(*BuildDescribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Builds_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.ci.v1beta1.Builds/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildsServer).List(ctx, req.(*BuildListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Builds_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appscode.ci.v1beta1.Builds",
	HandlerType: (*BuildsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Describe",
			Handler:    _Builds_Describe_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Builds_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor1,
}

func init() { proto.RegisterFile("build.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 578 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x54, 0x4f, 0x8b, 0xd3, 0x40,
	0x14, 0x27, 0x6d, 0x37, 0x4d, 0xa7, 0xeb, 0x9f, 0x8e, 0x5a, 0xc7, 0xb0, 0x48, 0x0d, 0xac, 0xd4,
	0x05, 0x13, 0x5a, 0x2f, 0x22, 0x78, 0x59, 0x8a, 0x5e, 0x64, 0x17, 0x22, 0x7b, 0xf1, 0x12, 0x26,
	0xc9, 0x58, 0xa6, 0x24, 0x99, 0x98, 0x99, 0x08, 0xcb, 0xb2, 0x97, 0xfd, 0x0a, 0xfa, 0x21, 0xf4,
	0xe0, 0xd1, 0x4f, 0xe1, 0xd1, 0xaf, 0xe0, 0x07, 0x91, 0xbc, 0x99, 0xd6, 0x76, 0xb1, 0xa8, 0x08,
	0x7b, 0x09, 0xbc, 0xdf, 0xfb, 0xfd, 0xe6, 0xfd, 0xe6, 0xbd, 0x37, 0x41, 0xfd, 0xb8, 0xe6, 0x59,
	0xea, 0x97, 0x95, 0x50, 0x02, 0xdf, 0xa2, 0x65, 0x29, 0x13, 0x91, 0x32, 0x3f, 0xe1, 0xfe, 0xfb,
	0x49, 0xcc, 0x14, 0x9d, 0xb8, 0x7b, 0x73, 0x21, 0xe6, 0x19, 0x0b, 0x68, 0xc9, 0x03, 0x5a, 0x14,
	0x42, 0x51, 0xc5, 0x45, 0x21, 0xb5, 0xc4, 0xbd, 0xbf, 0x94, 0x6c, 0xc9, 0x0f, 0x1b, 0x38, 0x55,
	0xa7, 0x25, 0x93, 0x01, 0x7c, 0x35, 0xee, 0x25, 0xe8, 0xf6, 0x61, 0x53, 0x79, 0xc6, 0x64, 0x52,
	0xf1, 0x98, 0x85, 0xec, 0x5d, 0xcd, 0xa4, 0xc2, 0xf7, 0x90, 0xb3, 0x10, 0x71, 0x54, 0xd0, 0x9c,
	0x11, 0x6b, 0x64, 0x8d, 0x7b, 0x61, 0x77, 0x21, 0xe2, 0x23, 0x9a, 0x33, 0x4c, 0x50, 0xb7, 0xa4,
	0x15, 0x2b, 0x94, 0x24, 0x2d, 0x9d, 0x31, 0x21, 0x1e, 0x22, 0xbb, 0xa8, 0xf3, 0x98, 0x55, 0xa4,
	0x3d, 0xb2, 0xc6, 0xed, 0xd0, 0x44, 0xde, 0xa7, 0x36, 0xba, 0x73, 0xa9, 0x8a, 0x2c, 0x45, 0x21,
	0x19, 0x0e, 0x90, 0x2d, 0x15, 0x55, 0xb5, 0x84, 0x22, 0xfd, 0xe9, 0x5d, 0x7f, 0x75, 0x75, 0x6d,
	0xd6, 0x7f, 0x0d, 0xe9, 0xd0, 0xd0, 0x36, 0x7c, 0xb5, 0xb6, 0xfa, 0x6a, 0x6f, 0xfa, 0x7a, 0x80,
	0x76, 0xa1, 0xbd, 0x91, 0x71, 0xd7, 0x01, 0x77, 0xba, 0xe5, 0x47, 0x00, 0x35, 0xe7, 0xc6, 0x54,
	0xb2, 0xa8, 0xae, 0x32, 0xb2, 0xa3, 0xd5, 0x4d, 0x7c, 0x52, 0x65, 0xd8, 0x45, 0x0e, 0x30, 0x79,
	0x31, 0x27, 0xf6, 0xc8, 0x1a, 0x3b, 0xe1, 0x2a, 0x06, 0x59, 0xcd, 0x33, 0x15, 0x89, 0x82, 0x74,
	0x8d, 0xac, 0x89, 0x8f, 0x8b, 0x46, 0x96, 0xd6, 0x15, 0x0c, 0x81, 0x38, 0x50, 0x70, 0x15, 0xe3,
	0xc7, 0x08, 0x33, 0xa9, 0x78, 0x4e, 0x15, 0x4b, 0xa3, 0x15, 0xab, 0x07, 0xac, 0xc1, 0x2a, 0x33,
	0x5b, 0xd2, 0x0f, 0xd0, 0xe0, 0x6d, 0x9d, 0x65, 0x51, 0xca, 0x65, 0x99, 0xd1, 0x53, 0x7d, 0x7b,
	0x04, 0xe5, 0x6e, 0x34, 0x89, 0x99, 0xc6, 0xa1, 0x0b, 0x43, 0x64, 0x57, 0x4c, 0xd6, 0x99, 0x22,
	0x7d, 0x20, 0x98, 0x08, 0xef, 0xa3, 0xeb, 0x89, 0x28, 0xa4, 0xc8, 0x58, 0x24, 0x6a, 0x55, 0xd6,
	0x8a, 0xec, 0x42, 0xfe, 0x9a, 0x41, 0x8f, 0x01, 0xf4, 0x5e, 0xa2, 0x9b, 0x30, 0xa9, 0x57, 0x5c,
	0xaa, 0xff, 0xd9, 0x05, 0xef, 0x8b, 0x85, 0x06, 0x6b, 0x27, 0x5d, 0xe9, 0xbc, 0xa7, 0xc8, 0x86,
	0x09, 0x49, 0xd2, 0x19, 0xb5, 0xc7, 0xfd, 0xa9, 0xeb, 0xff, 0xe6, 0x41, 0xf9, 0xe0, 0x2e, 0x34,
	0x4c, 0xef, 0x04, 0xed, 0x00, 0xb0, 0xb6, 0xc4, 0xd6, 0xfa, 0x12, 0x37, 0xb8, 0xb1, 0xae, 0x7d,
	0x2c, 0x1d, 0xee, 0xa1, 0x9e, 0xe2, 0x39, 0x93, 0x8a, 0xe6, 0xa5, 0xd9, 0xfb, 0x5f, 0xc0, 0xf4,
	0x5b, 0x0b, 0xd9, 0x70, 0xae, 0xc4, 0x9f, 0x2d, 0xe4, 0x2c, 0x1f, 0x00, 0x7e, 0xb4, 0xdd, 0xd2,
	0xa5, 0xa7, 0xe8, 0x1e, 0xfc, 0x0d, 0x55, 0xf7, 0xd7, 0x7b, 0x71, 0xf1, 0x95, 0xb4, 0x1c, 0xeb,
	0xe2, 0xfb, 0x8f, 0x0f, 0xad, 0x67, 0xf8, 0x69, 0xb0, 0xf1, 0x57, 0x48, 0x78, 0x60, 0xd4, 0xc1,
	0x42, 0xc4, 0x32, 0x38, 0x5b, 0x76, 0xf6, 0x3c, 0xd0, 0x4d, 0x08, 0xce, 0xf4, 0x5d, 0xcf, 0xf1,
	0x47, 0x0b, 0x75, 0x9a, 0xc1, 0xe1, 0xfd, 0xed, 0xc5, 0xd7, 0x56, 0xc4, 0x7d, 0xf8, 0x27, 0x9a,
	0xf1, 0xf7, 0x7c, 0xcd, 0xdf, 0x04, 0x07, 0xff, 0xe8, 0xef, 0xb0, 0xf7, 0xa6, 0x6b, 0x18, 0xb1,
	0x0d, 0xff, 0xaf, 0x27, 0x3f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc8, 0xa6, 0xe3, 0x46, 0x39, 0x05,
	0x00, 0x00,
}
