// Code generated by protoc-gen-go.
// source: credential.proto
// DO NOT EDIT!

/*
Package v1beta1 is a generated protocol buffer package.

It is generated from these files:
	credential.proto

It has these top-level messages:
	CredentialCreateRequest
	CredentialUpdateRequest
	CredentialIsAuthorizedRequest
	CredentialIsAuthorizedResponse
	CredentialDeleteRequest
	CredentialListRequest
	CredentialListResponse
	Credential
*/
package v1beta1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/appscodeapis/appscode/api"
import appscode_dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CredentialCreateRequest struct {
	Name     string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Provider string            `protobuf:"bytes,2,opt,name=provider" json:"provider,omitempty"`
	Data     map[string]string `protobuf:"bytes,3,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *CredentialCreateRequest) Reset()                    { *m = CredentialCreateRequest{} }
func (m *CredentialCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CredentialCreateRequest) ProtoMessage()               {}
func (*CredentialCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CredentialCreateRequest) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type CredentialUpdateRequest struct {
	Name     string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Provider string            `protobuf:"bytes,2,opt,name=provider" json:"provider,omitempty"`
	Data     map[string]string `protobuf:"bytes,3,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *CredentialUpdateRequest) Reset()                    { *m = CredentialUpdateRequest{} }
func (m *CredentialUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*CredentialUpdateRequest) ProtoMessage()               {}
func (*CredentialUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CredentialUpdateRequest) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type CredentialIsAuthorizedRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CredentialIsAuthorizedRequest) Reset()                    { *m = CredentialIsAuthorizedRequest{} }
func (m *CredentialIsAuthorizedRequest) String() string            { return proto.CompactTextString(m) }
func (*CredentialIsAuthorizedRequest) ProtoMessage()               {}
func (*CredentialIsAuthorizedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type CredentialIsAuthorizedResponse struct {
	Status       *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Unauthorized bool                    `protobuf:"varint,2,opt,name=unauthorized" json:"unauthorized,omitempty"`
	Message      string                  `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CredentialIsAuthorizedResponse) Reset()                    { *m = CredentialIsAuthorizedResponse{} }
func (m *CredentialIsAuthorizedResponse) String() string            { return proto.CompactTextString(m) }
func (*CredentialIsAuthorizedResponse) ProtoMessage()               {}
func (*CredentialIsAuthorizedResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CredentialIsAuthorizedResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type CredentialDeleteRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CredentialDeleteRequest) Reset()                    { *m = CredentialDeleteRequest{} }
func (m *CredentialDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*CredentialDeleteRequest) ProtoMessage()               {}
func (*CredentialDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type CredentialListRequest struct {
}

func (m *CredentialListRequest) Reset()                    { *m = CredentialListRequest{} }
func (m *CredentialListRequest) String() string            { return proto.CompactTextString(m) }
func (*CredentialListRequest) ProtoMessage()               {}
func (*CredentialListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type CredentialListResponse struct {
	Status      *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Credentials []*Credential           `protobuf:"bytes,2,rep,name=credentials" json:"credentials,omitempty"`
}

func (m *CredentialListResponse) Reset()                    { *m = CredentialListResponse{} }
func (m *CredentialListResponse) String() string            { return proto.CompactTextString(m) }
func (*CredentialListResponse) ProtoMessage()               {}
func (*CredentialListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CredentialListResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CredentialListResponse) GetCredentials() []*Credential {
	if m != nil {
		return m.Credentials
	}
	return nil
}

type Credential struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Provider    string `protobuf:"bytes,2,opt,name=provider" json:"provider,omitempty"`
	Information string `protobuf:"bytes,3,opt,name=information" json:"information,omitempty"`
	ModifiedAt  int64  `protobuf:"varint,4,opt,name=modified_at,json=modifiedAt" json:"modified_at,omitempty"`
}

func (m *Credential) Reset()                    { *m = Credential{} }
func (m *Credential) String() string            { return proto.CompactTextString(m) }
func (*Credential) ProtoMessage()               {}
func (*Credential) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func init() {
	proto.RegisterType((*CredentialCreateRequest)(nil), "appscode.credential.v1beta1.CredentialCreateRequest")
	proto.RegisterType((*CredentialUpdateRequest)(nil), "appscode.credential.v1beta1.CredentialUpdateRequest")
	proto.RegisterType((*CredentialIsAuthorizedRequest)(nil), "appscode.credential.v1beta1.CredentialIsAuthorizedRequest")
	proto.RegisterType((*CredentialIsAuthorizedResponse)(nil), "appscode.credential.v1beta1.CredentialIsAuthorizedResponse")
	proto.RegisterType((*CredentialDeleteRequest)(nil), "appscode.credential.v1beta1.CredentialDeleteRequest")
	proto.RegisterType((*CredentialListRequest)(nil), "appscode.credential.v1beta1.CredentialListRequest")
	proto.RegisterType((*CredentialListResponse)(nil), "appscode.credential.v1beta1.CredentialListResponse")
	proto.RegisterType((*Credential)(nil), "appscode.credential.v1beta1.Credential")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Credentials service

type CredentialsClient interface {
	List(ctx context.Context, in *CredentialListRequest, opts ...grpc.CallOption) (*CredentialListResponse, error)
	Create(ctx context.Context, in *CredentialCreateRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error)
	Update(ctx context.Context, in *CredentialUpdateRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error)
	IsAuthorized(ctx context.Context, in *CredentialIsAuthorizedRequest, opts ...grpc.CallOption) (*CredentialIsAuthorizedResponse, error)
	Delete(ctx context.Context, in *CredentialDeleteRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error)
}

type credentialsClient struct {
	cc *grpc.ClientConn
}

func NewCredentialsClient(cc *grpc.ClientConn) CredentialsClient {
	return &credentialsClient{cc}
}

func (c *credentialsClient) List(ctx context.Context, in *CredentialListRequest, opts ...grpc.CallOption) (*CredentialListResponse, error) {
	out := new(CredentialListResponse)
	err := grpc.Invoke(ctx, "/appscode.credential.v1beta1.Credentials/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *credentialsClient) Create(ctx context.Context, in *CredentialCreateRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error) {
	out := new(appscode_dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/appscode.credential.v1beta1.Credentials/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *credentialsClient) Update(ctx context.Context, in *CredentialUpdateRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error) {
	out := new(appscode_dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/appscode.credential.v1beta1.Credentials/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *credentialsClient) IsAuthorized(ctx context.Context, in *CredentialIsAuthorizedRequest, opts ...grpc.CallOption) (*CredentialIsAuthorizedResponse, error) {
	out := new(CredentialIsAuthorizedResponse)
	err := grpc.Invoke(ctx, "/appscode.credential.v1beta1.Credentials/IsAuthorized", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *credentialsClient) Delete(ctx context.Context, in *CredentialDeleteRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error) {
	out := new(appscode_dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/appscode.credential.v1beta1.Credentials/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Credentials service

type CredentialsServer interface {
	List(context.Context, *CredentialListRequest) (*CredentialListResponse, error)
	Create(context.Context, *CredentialCreateRequest) (*appscode_dtypes.VoidResponse, error)
	Update(context.Context, *CredentialUpdateRequest) (*appscode_dtypes.VoidResponse, error)
	IsAuthorized(context.Context, *CredentialIsAuthorizedRequest) (*CredentialIsAuthorizedResponse, error)
	Delete(context.Context, *CredentialDeleteRequest) (*appscode_dtypes.VoidResponse, error)
}

func RegisterCredentialsServer(s *grpc.Server, srv CredentialsServer) {
	s.RegisterService(&_Credentials_serviceDesc, srv)
}

func _Credentials_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CredentialListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CredentialsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.credential.v1beta1.Credentials/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CredentialsServer).List(ctx, req.(*CredentialListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Credentials_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CredentialCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CredentialsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.credential.v1beta1.Credentials/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CredentialsServer).Create(ctx, req.(*CredentialCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Credentials_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CredentialUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CredentialsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.credential.v1beta1.Credentials/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CredentialsServer).Update(ctx, req.(*CredentialUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Credentials_IsAuthorized_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CredentialIsAuthorizedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CredentialsServer).IsAuthorized(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.credential.v1beta1.Credentials/IsAuthorized",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CredentialsServer).IsAuthorized(ctx, req.(*CredentialIsAuthorizedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Credentials_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CredentialDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CredentialsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.credential.v1beta1.Credentials/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CredentialsServer).Delete(ctx, req.(*CredentialDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Credentials_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appscode.credential.v1beta1.Credentials",
	HandlerType: (*CredentialsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Credentials_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Credentials_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Credentials_Update_Handler,
		},
		{
			MethodName: "IsAuthorized",
			Handler:    _Credentials_IsAuthorized_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Credentials_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("credential.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 640 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x55, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0xd6, 0x26, 0xf9, 0xb9, 0xed, 0xb8, 0xd2, 0xaf, 0x5a, 0x01, 0xb5, 0x0c, 0x6d, 0x23, 0x73,
	0x68, 0xa8, 0xa8, 0x4d, 0x13, 0x10, 0x55, 0xa8, 0x40, 0x69, 0xcb, 0xa1, 0x12, 0x48, 0x95, 0x11,
	0x1c, 0xb8, 0xa0, 0x6d, 0xbc, 0x0d, 0x2b, 0x12, 0xaf, 0xf1, 0xae, 0x23, 0x05, 0x84, 0x90, 0xfa,
	0x02, 0x1c, 0x40, 0xe2, 0x80, 0xc4, 0x91, 0x37, 0xe0, 0x49, 0x90, 0xfa, 0x04, 0x1c, 0x78, 0x0c,
	0xe4, 0x3f, 0x89, 0xed, 0xd2, 0xa4, 0x4e, 0x84, 0xb8, 0x58, 0xde, 0x99, 0x9d, 0x9d, 0xef, 0x9b,
	0x99, 0xfd, 0x16, 0x96, 0xda, 0x3e, 0x75, 0xa8, 0x2b, 0x19, 0xe9, 0x9a, 0x9e, 0xcf, 0x25, 0xc7,
	0x57, 0x89, 0xe7, 0x89, 0x36, 0x77, 0xa8, 0x99, 0x71, 0xf5, 0xb7, 0x8e, 0xa8, 0x24, 0x5b, 0xfa,
	0xb5, 0x0e, 0xe7, 0x9d, 0x2e, 0xb5, 0x88, 0xc7, 0x2c, 0xe2, 0xba, 0x5c, 0x12, 0xc9, 0xb8, 0x2b,
	0xe2, 0x50, 0x7d, 0x75, 0x18, 0x3a, 0xc6, 0xbf, 0x96, 0xf3, 0x3b, 0x72, 0xe0, 0x51, 0x61, 0x45,
	0xdf, 0x78, 0x83, 0x71, 0x8a, 0x60, 0x79, 0x6f, 0x94, 0x75, 0xcf, 0xa7, 0x44, 0x52, 0x9b, 0xbe,
	0x0e, 0xa8, 0x90, 0x18, 0x43, 0xc5, 0x25, 0x3d, 0xaa, 0xa1, 0x2a, 0xaa, 0x2d, 0xd8, 0xd1, 0x3f,
	0xd6, 0x61, 0xde, 0xf3, 0x79, 0x9f, 0x39, 0xd4, 0xd7, 0x4a, 0x91, 0x7d, 0xb4, 0xc6, 0x36, 0x54,
	0x1c, 0x22, 0x89, 0x56, 0xae, 0x96, 0x6b, 0x6a, 0xfd, 0xbe, 0x39, 0x81, 0x96, 0x39, 0x26, 0xa7,
	0xb9, 0x4f, 0x24, 0x79, 0xe8, 0x4a, 0x7f, 0x60, 0x47, 0x67, 0xe9, 0x77, 0x61, 0x61, 0x64, 0xc2,
	0x4b, 0x50, 0x7e, 0x45, 0x07, 0x09, 0x9e, 0xf0, 0x17, 0x5f, 0x82, 0xff, 0xfa, 0xa4, 0x1b, 0xd0,
	0x04, 0x4b, 0xbc, 0x68, 0x96, 0xb6, 0xd1, 0x19, 0x62, 0x4f, 0x3d, 0xe7, 0x9f, 0x13, 0xcb, 0xe5,
	0xfc, 0x7b, 0xc4, 0x1a, 0xb0, 0x92, 0xe6, 0x38, 0x10, 0xad, 0x40, 0xbe, 0xe4, 0x3e, 0x7b, 0x43,
	0x9d, 0x09, 0xec, 0x8c, 0x0f, 0x08, 0x56, 0xc7, 0x45, 0x09, 0x8f, 0xbb, 0x82, 0x62, 0x0b, 0x14,
	0x21, 0x89, 0x0c, 0x44, 0x14, 0xa8, 0xd6, 0x97, 0x53, 0x9a, 0xf1, 0xdc, 0x98, 0x4f, 0x22, 0xb7,
	0x9d, 0x6c, 0xc3, 0x06, 0x2c, 0x06, 0x2e, 0x19, 0x1d, 0x14, 0x21, 0x9d, 0xb7, 0x73, 0x36, 0xac,
	0xc1, 0x5c, 0x8f, 0x0a, 0x41, 0x3a, 0x54, 0x2b, 0x47, 0x70, 0x86, 0x4b, 0x63, 0x33, 0xdb, 0x9e,
	0x7d, 0xda, 0xa5, 0x13, 0xdb, 0x63, 0x2c, 0xc3, 0xe5, 0x74, 0xfb, 0x23, 0x26, 0x64, 0xb2, 0xd9,
	0xf8, 0x84, 0xe0, 0xca, 0x59, 0xcf, 0xac, 0x8c, 0x0e, 0x40, 0x4d, 0x3b, 0x2a, 0xb4, 0x52, 0xd4,
	0xee, 0xf5, 0x82, 0xed, 0xb6, 0xb3, 0xb1, 0xc6, 0x7b, 0x80, 0xd4, 0x35, 0xf5, 0xc0, 0x55, 0x41,
	0x65, 0xee, 0x31, 0xf7, 0x7b, 0xd1, 0x65, 0x4e, 0x4a, 0x97, 0x35, 0xe1, 0x35, 0x50, 0x7b, 0xdc,
	0x61, 0xc7, 0x8c, 0x3a, 0x2f, 0x88, 0xd4, 0x2a, 0x55, 0x54, 0x2b, 0xdb, 0x30, 0x34, 0xb5, 0x64,
	0xfd, 0x97, 0x02, 0x6a, 0x8a, 0x40, 0xe0, 0x6f, 0x08, 0x2a, 0x61, 0x75, 0x70, 0xbd, 0x20, 0x9f,
	0x4c, 0x91, 0xf5, 0xc6, 0x54, 0x31, 0x71, 0xf9, 0x8d, 0x3b, 0x27, 0xdf, 0xb5, 0xd2, 0x3c, 0x3a,
	0xf9, 0xf1, 0xf3, 0x63, 0xe9, 0x06, 0x5e, 0xb7, 0x72, 0x52, 0xd4, 0xee, 0xf2, 0xc0, 0xb1, 0x92,
	0x13, 0xac, 0x4c, 0xe5, 0xf0, 0x67, 0x04, 0x4a, 0xac, 0x09, 0xf8, 0xf6, 0x2c, 0x12, 0xa2, 0xaf,
	0xfc, 0xd1, 0xe6, 0x67, 0x9c, 0x8d, 0xe6, 0xdc, 0xd8, 0xce, 0xc0, 0xba, 0x69, 0x14, 0x85, 0xd5,
	0x44, 0x1b, 0xf8, 0x2b, 0x02, 0x25, 0xbe, 0xd4, 0x85, 0x91, 0xe5, 0x34, 0xe0, 0x22, 0x64, 0x0f,
	0x32, 0xc8, 0x1a, 0xba, 0x59, 0x10, 0x99, 0xf5, 0x36, 0x1c, 0xa7, 0x77, 0x21, 0xc0, 0x53, 0x04,
	0x8b, 0xd9, 0xbb, 0x8d, 0x9b, 0x05, 0x61, 0x9e, 0x23, 0x23, 0xfa, 0xbd, 0x99, 0x62, 0x13, 0x2a,
	0x8f, 0x33, 0x54, 0x5a, 0xc6, 0xce, 0x74, 0x54, 0x2c, 0x26, 0x36, 0x53, 0x0d, 0x09, 0x89, 0x7d,
	0x41, 0xa0, 0xc4, 0x1a, 0x51, 0xb8, 0xf2, 0x39, 0x49, 0xb9, 0xa8, 0xf2, 0x3b, 0x19, 0xb8, 0xb7,
	0x36, 0xa6, 0xac, 0xfc, 0x6e, 0x0b, 0xae, 0xb7, 0x79, 0x2f, 0xcd, 0x40, 0x3c, 0x76, 0x0e, 0xb6,
	0xdd, 0xff, 0x53, 0x70, 0x87, 0xe1, 0xdb, 0x7b, 0x88, 0x9e, 0xcf, 0x25, 0xbe, 0x23, 0x25, 0x7a,
	0x8d, 0x1b, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x7e, 0xf3, 0xc4, 0xf2, 0x1d, 0x08, 0x00, 0x00,
}
