// Code generated by protoc-gen-go.
// source: authentication.proto
// DO NOT EDIT!

/*
Package v1beta1 is a generated protocol buffer package.

It is generated from these files:
	authentication.proto
	conduit.proto
	project.proto

It has these top-level messages:
	LoginRequest
	LoginResponse
	LogoutRequest
	LogoutResponse
	CSRFTokenResponse
	ConduitWhoAmIResponse
	ConduitUsersResponse
	ConduitUser
	Preferences
	ProjectListRequest
	ProjectListResponse
	ProjectMemberListRequest
	ProjectMemberListResponse
	Project
	Member
*/
package v1beta1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/appscodeapis/appscode/api"
import appscode_dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginRequest struct {
	Namespace  string `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	Username   string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Password   string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	Token      string `protobuf:"bytes,4,opt,name=token" json:"token,omitempty"`
	IssueToken bool   `protobuf:"varint,5,opt,name=issue_token,json=issueToken" json:"issue_token,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *LoginRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginRequest) GetIssueToken() bool {
	if m != nil {
		return m.IssueToken
	}
	return false
}

type LoginResponse struct {
	Status *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Token  string                  `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LoginResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type LogoutRequest struct {
	Namespace string `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *LogoutRequest) Reset()                    { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string            { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()               {}
func (*LogoutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LogoutRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *LogoutRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type LogoutResponse struct {
	Status *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *LogoutResponse) Reset()                    { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string            { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()               {}
func (*LogoutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LogoutResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type CSRFTokenResponse struct {
	Status    *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	CsrfToken string                  `protobuf:"bytes,2,opt,name=csrf_token,json=csrfToken" json:"csrf_token,omitempty"`
}

func (m *CSRFTokenResponse) Reset()                    { *m = CSRFTokenResponse{} }
func (m *CSRFTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*CSRFTokenResponse) ProtoMessage()               {}
func (*CSRFTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CSRFTokenResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CSRFTokenResponse) GetCsrfToken() string {
	if m != nil {
		return m.CsrfToken
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "appscode.auth.v1beta1.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "appscode.auth.v1beta1.LoginResponse")
	proto.RegisterType((*LogoutRequest)(nil), "appscode.auth.v1beta1.LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "appscode.auth.v1beta1.LogoutResponse")
	proto.RegisterType((*CSRFTokenResponse)(nil), "appscode.auth.v1beta1.CSRFTokenResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Authentication service

type AuthenticationClient interface {
	// This rpc is used to check a valid user from other applications.
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error)
	CSRFToken(ctx context.Context, in *appscode_dtypes.VoidRequest, opts ...grpc.CallOption) (*CSRFTokenResponse, error)
}

type authenticationClient struct {
	cc *grpc.ClientConn
}

func NewAuthenticationClient(cc *grpc.ClientConn) AuthenticationClient {
	return &authenticationClient{cc}
}

func (c *authenticationClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := grpc.Invoke(ctx, "/appscode.auth.v1beta1.Authentication/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error) {
	out := new(LogoutResponse)
	err := grpc.Invoke(ctx, "/appscode.auth.v1beta1.Authentication/Logout", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) CSRFToken(ctx context.Context, in *appscode_dtypes.VoidRequest, opts ...grpc.CallOption) (*CSRFTokenResponse, error) {
	out := new(CSRFTokenResponse)
	err := grpc.Invoke(ctx, "/appscode.auth.v1beta1.Authentication/CSRFToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Authentication service

type AuthenticationServer interface {
	// This rpc is used to check a valid user from other applications.
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	Logout(context.Context, *LogoutRequest) (*LogoutResponse, error)
	CSRFToken(context.Context, *appscode_dtypes.VoidRequest) (*CSRFTokenResponse, error)
}

func RegisterAuthenticationServer(s *grpc.Server, srv AuthenticationServer) {
	s.RegisterService(&_Authentication_serviceDesc, srv)
}

func _Authentication_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.auth.v1beta1.Authentication/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.auth.v1beta1.Authentication/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_CSRFToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(appscode_dtypes.VoidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).CSRFToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.auth.v1beta1.Authentication/CSRFToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).CSRFToken(ctx, req.(*appscode_dtypes.VoidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Authentication_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appscode.auth.v1beta1.Authentication",
	HandlerType: (*AuthenticationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Authentication_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _Authentication_Logout_Handler,
		},
		{
			MethodName: "CSRFToken",
			Handler:    _Authentication_CSRFToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "authentication.proto",
}

func init() { proto.RegisterFile("authentication.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 480 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0xb5, 0x29, 0x09, 0xc9, 0x14, 0x2a, 0xb1, 0x14, 0x61, 0x59, 0x29, 0xad, 0xcc, 0x57,
	0x44, 0xa9, 0xad, 0x96, 0x03, 0x1f, 0x17, 0xd4, 0x56, 0xe2, 0xc4, 0xa1, 0x72, 0x51, 0x0f, 0x5c,
	0xa2, 0xad, 0xb3, 0xa4, 0x86, 0x76, 0x67, 0xc9, 0xac, 0x41, 0x5c, 0x7b, 0x45, 0x82, 0x03, 0x47,
	0x9e, 0x83, 0x07, 0xe0, 0x19, 0x78, 0x05, 0x1e, 0x04, 0xed, 0xae, 0x93, 0xd8, 0x6a, 0x9b, 0xa2,
	0x5c, 0x2c, 0xed, 0xfc, 0x77, 0x66, 0x7e, 0xb3, 0xff, 0x31, 0x2c, 0x8b, 0xc2, 0x1c, 0x49, 0x65,
	0xf2, 0x4c, 0x98, 0x1c, 0x55, 0xac, 0x47, 0x68, 0x90, 0xdf, 0x12, 0x5a, 0x53, 0x86, 0x03, 0x19,
	0x5b, 0x39, 0xfe, 0xb4, 0x79, 0x28, 0x8d, 0xd8, 0x0c, 0xbb, 0x43, 0xc4, 0xe1, 0xb1, 0x4c, 0x84,
	0xce, 0x13, 0xa1, 0x14, 0x1a, 0x97, 0x43, 0x3e, 0x29, 0xbc, 0x33, 0x4e, 0xba, 0x40, 0x5f, 0xad,
	0xe9, 0x03, 0xf3, 0x45, 0x4b, 0x4a, 0xdc, 0xd7, 0x5f, 0x88, 0x7e, 0x32, 0xb8, 0xf6, 0x1a, 0x87,
	0xb9, 0x4a, 0xe5, 0xc7, 0x42, 0x92, 0xe1, 0x5d, 0xe8, 0x28, 0x71, 0x22, 0x49, 0x8b, 0x4c, 0x06,
	0x6c, 0x8d, 0xf5, 0x3a, 0xe9, 0x34, 0xc0, 0x43, 0x68, 0x17, 0x24, 0x47, 0x36, 0x10, 0x34, 0x9c,
	0x38, 0x39, 0x5b, 0x4d, 0x0b, 0xa2, 0xcf, 0x38, 0x1a, 0x04, 0x0b, 0x5e, 0x1b, 0x9f, 0xf9, 0x32,
	0x34, 0x0d, 0x7e, 0x90, 0x2a, 0xb8, 0xe2, 0x04, 0x7f, 0xe0, 0xab, 0xb0, 0x98, 0x13, 0x15, 0xb2,
	0xef, 0xb5, 0xe6, 0x1a, 0xeb, 0xb5, 0x53, 0x70, 0xa1, 0x37, 0x36, 0x12, 0x1d, 0xc0, 0xf5, 0x12,
	0x8e, 0x34, 0x2a, 0x92, 0x3c, 0x81, 0x16, 0x19, 0x61, 0x0a, 0x72, 0x68, 0x8b, 0x5b, 0xb7, 0xe3,
	0xc9, 0xab, 0xf9, 0xe1, 0xe2, 0x7d, 0x27, 0xa7, 0xe5, 0xb5, 0x69, 0xe3, 0x46, 0xa5, 0x71, 0xb4,
	0xeb, 0xea, 0x62, 0x61, 0xfe, 0x6f, 0xea, 0xf3, 0x8b, 0x6c, 0xc3, 0xd2, 0xb8, 0xc8, 0x9c, 0x74,
	0x51, 0x06, 0x37, 0x76, 0xf7, 0xd3, 0x57, 0x6e, 0xd8, 0xf9, 0x67, 0x5c, 0x01, 0xc8, 0x68, 0xf4,
	0xae, 0x5f, 0x65, 0xec, 0xd8, 0x88, 0xab, 0xbb, 0xf5, 0x7b, 0x01, 0x96, 0xb6, 0x6b, 0x1b, 0xc7,
	0xbf, 0x32, 0x68, 0xba, 0x87, 0xe5, 0x77, 0xe3, 0x73, 0xd7, 0x2e, 0xae, 0xee, 0x44, 0x78, 0x6f,
	0xf6, 0x25, 0xcf, 0x1d, 0x3d, 0x3d, 0xfd, 0x15, 0x34, 0xda, 0xec, 0xf4, 0xcf, 0xdf, 0x1f, 0x8d,
	0xf5, 0xe8, 0x41, 0xd2, 0xaf, 0xef, 0x66, 0x61, 0x8e, 0x92, 0x32, 0x31, 0x39, 0xb6, 0x89, 0xc9,
	0x7b, 0x42, 0xf5, 0x82, 0x3d, 0xe2, 0xdf, 0x19, 0xb4, 0xfc, 0x4b, 0xf2, 0x19, 0x9d, 0xa6, 0x6e,
	0x85, 0xf7, 0x2f, 0xb9, 0x55, 0x02, 0x3d, 0xab, 0x00, 0x3d, 0x8e, 0x1e, 0x5e, 0x02, 0x84, 0x85,
	0x99, 0x10, 0x7d, 0x63, 0xd0, 0x99, 0x18, 0xc3, 0xbb, 0x67, 0x0c, 0x38, 0xc0, 0x7c, 0x30, 0x86,
	0xe9, 0x5d, 0x00, 0x73, 0xc6, 0xd8, 0xe8, 0x79, 0x85, 0x67, 0x83, 0xaf, 0xcf, 0xe2, 0xb1, 0xee,
	0x6d, 0x38, 0x3f, 0x1d, 0xd3, 0xce, 0x4b, 0x58, 0xc9, 0xf0, 0xa4, 0xd2, 0x49, 0xe7, 0xb5, 0x6e,
	0x3b, 0x37, 0xeb, 0x0e, 0xef, 0xd9, 0x9f, 0x7b, 0x8f, 0xbd, 0xbd, 0x5a, 0xea, 0x87, 0x2d, 0xf7,
	0xbb, 0x3f, 0xf9, 0x17, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x90, 0x95, 0xca, 0x7c, 0x04, 0x00, 0x00,
}
