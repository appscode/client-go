syntax = "proto3";

package kubernetes;

import "google/api/annotations.proto";
import "api/dtypes/types.proto";

service Events {
  rpc Constructive(EventRequest) returns (EventResponse) {
    option (google.api.http) = {
      put: "/appscode/api/kubernetes/v0.1/events/{cluster_name}/construct"
      body: "*"
    };
  }

  rpc Destructive(EventRequest) returns (EventResponse) {
    option (google.api.http) = {
      put: "/appscode/api/kubernetes/v0.1/events/{cluster_name}/destruct"
      body: "*"
    };
  }
}

message EventRequest {
  string cluster_name = 1;
  string kube_namespace = 2;
  string kube_object_type = 3;
  string kube_object_name = 4;
  string event_type = 5;

  message ObjectMeta {
    string kind = 1;
    repeated string service = 2;
    string replication_controller = 3;
    string namespace = 4;
    string pod_ip = 5;
    string instance_id = 6;
    map<string, string> labels = 7;
  }
  ObjectMeta metadata = 7;
}

message EventResponse {
  message Handler {
    string action = 1;
    string receiver = 2;
    string base = 3;
    string suffix = 4;
    string verb = 5;
    bytes data = 6;
  }

  dtypes.Status status = 1;
  repeated Handler tasks = 2;
}
