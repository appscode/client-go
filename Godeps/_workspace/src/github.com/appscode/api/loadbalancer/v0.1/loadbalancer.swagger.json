{
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "dtypesHelp": {
      "properties": {
        "description": {
          "format": "string",
          "title": "Describe what link offers",
          "type": "string"
        },
        "url": {
          "description": "The URL of The link.",
          "format": "string",
          "type": "string"
        }
      },
      "title": "Provides links to documentation or for performing an out of band action.\nNext Id 3;",
      "type": "object"
    },
    "dtypesStatus": {
      "description": "Next Id 5.",
      "properties": {
        "code": {
          "format": "string",
          "title": "Response status code",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There will be a\ncommon set of message types for APIs to use.",
          "items": {
            "$ref": "#/definitions/protobufAny"
          },
          "type": "array"
        },
        "help": {
          "$ref": "#/definitions/dtypesHelp",
          "description": "Optional. Help link if there is an error."
        },
        "message": {
          "description": "User facing message.",
          "format": "string",
          "type": "string"
        },
        "status": {
          "description": "Response status code string.",
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "dtypesVoidResponse": {
      "properties": {
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "loadbalancerCreateRequest": {
      "properties": {
        "cluster": {
          "format": "string",
          "type": "string"
        },
        "load_balancer": {
          "$ref": "#/definitions/loadbalancerLoadBalancer"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "loadbalancerDeleteRequest": {
      "properties": {
        "cluster": {
          "format": "string",
          "type": "string"
        },
        "kind": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "loadbalancerDescribeRequest": {
      "properties": {
        "cluster": {
          "format": "string",
          "type": "string"
        },
        "kind": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "loadbalancerDescribeResponse": {
      "properties": {
        "load_balancer": {
          "$ref": "#/definitions/loadbalancerLoadBalancer"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "loadbalancerHTTPLoadBalancerRule": {
      "properties": {
        "backend": {
          "$ref": "#/definitions/loadbalancerLoadBalancerBackend"
        },
        "header_rule": {
          "items": {
            "format": "string",
            "type": "string"
          },
          "type": "array"
        },
        "path": {
          "format": "string",
          "type": "string"
        },
        "rewrite_rule": {
          "items": {
            "format": "string",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "loadbalancerListRequest": {
      "properties": {
        "cluster": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "loadbalancerListResponse": {
      "properties": {
        "load_balancer": {
          "items": {
            "$ref": "#/definitions/loadbalancerLoadBalancer"
          },
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "loadbalancerLoadBalancer": {
      "properties": {
        "creation_timestamp": {
          "format": "string",
          "type": "string"
        },
        "json": {
          "format": "string",
          "type": "string"
        },
        "kind": {
          "description": "'kind' defines is it the regular kubernetes instance or the\nappscode superset called Extended Ingress. This field will\nstrictly contains only those two values\n'ingress' - default kubernetes ingress object.\n'extendedIngress' - appscode superset of ingress.\nwhen creating a Loadbalancer from UI this field will always\nbe only 'extendedIngress.' List, Describe, Update and Delete\nwill support both two modes.\nCreate will support only extendedIngress.\nFor Creating or Updating an regular ingress one must use the\nkubectl or direct API calls directly to kubernetes.",
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "namespace": {
          "format": "string",
          "type": "string"
        },
        "options": {
          "additionalProperties": {
            "format": "string",
            "type": "string"
          },
          "type": "object"
        },
        "spec": {
          "$ref": "#/definitions/loadbalancerSpec"
        },
        "status": {
          "$ref": "#/definitions/loadbalancerStatus"
        }
      },
      "type": "object"
    },
    "loadbalancerLoadBalancerBackend": {
      "properties": {
        "service_name": {
          "format": "string",
          "type": "string"
        },
        "service_port": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "loadbalancerLoadBalancerRule": {
      "properties": {
        "SSL_secret_name": {
          "description": "ssl secret name to enable https on the host.\nssl secret must contain data with the certs pem file.",
          "format": "string",
          "type": "string"
        },
        "host": {
          "format": "string",
          "type": "string"
        },
        "http": {
          "items": {
            "$ref": "#/definitions/loadbalancerHTTPLoadBalancerRule"
          },
          "type": "array"
        },
        "tcp": {
          "items": {
            "$ref": "#/definitions/loadbalancerTCPLoadBalancerRule"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "loadbalancerLoadBalancerStatus": {
      "properties": {
        "IP": {
          "format": "string",
          "type": "string"
        },
        "host": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "loadbalancerSpec": {
      "properties": {
        "backend": {
          "$ref": "#/definitions/loadbalancerHTTPLoadBalancerRule"
        },
        "rules": {
          "items": {
            "$ref": "#/definitions/loadbalancerLoadBalancerRule"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "loadbalancerStatus": {
      "properties": {
        "status": {
          "items": {
            "$ref": "#/definitions/loadbalancerLoadBalancerStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "loadbalancerTCPLoadBalancerRule": {
      "properties": {
        "backend": {
          "$ref": "#/definitions/loadbalancerLoadBalancerBackend"
        },
        "port": {
          "format": "string",
          "type": "string"
        },
        "secret_pem_name": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "loadbalancerUpdateRequest": {
      "properties": {
        "cluster": {
          "format": "string",
          "type": "string"
        },
        "load_balancer": {
          "$ref": "#/definitions/loadbalancerLoadBalancer"
        },
        "name": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protobufAny": {
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
      "properties": {
        "type_url": {
          "description": "A URL/resource name whose content describes the type of the\nserialized protocol buffer message.\n\nFor URLs which use the scheme `http`, `https`, or no scheme, the\nfollowing restrictions and interpretations apply:\n\n* If no scheme is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n  The name should be in a canonical form (e.g., leading \".\" is\n  not accepted).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics.",
          "format": "string",
          "type": "string"
        },
        "value": {
          "description": "Must be a valid serialized protocol buffer of the above specified type.",
          "format": "byte",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "host": "api.appscode.com",
  "info": {
    "title": "loadbalancer.proto",
    "version": "0.1"
  },
  "paths": {
    "/appscode/api/loadbalancer/v0.1": {
      "post": {
        "operationId": "Update",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loadbalancerUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/dtypesVoidResponse"
            }
          }
        },
        "tags": [
          "LoadBalancers"
        ]
      },
      "put": {
        "operationId": "Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loadbalancerCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/dtypesVoidResponse"
            }
          }
        },
        "tags": [
          "LoadBalancers"
        ]
      }
    },
    "/appscode/api/loadbalancer/v0.1/{cluster}": {
      "get": {
        "operationId": "List",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/loadbalancerListResponse"
            }
          }
        },
        "tags": [
          "LoadBalancers"
        ]
      }
    },
    "/appscode/api/loadbalancer/v0.1/{cluster}/{name}": {
      "get": {
        "operationId": "Describe",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          },
          {
            "format": "string",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/loadbalancerDescribeResponse"
            }
          }
        },
        "tags": [
          "LoadBalancers"
        ]
      }
    },
    "/appscode/api/loadbalancer/v0.1/{name}": {
      "delete": {
        "operationId": "Delete",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/dtypesVoidResponse"
            }
          }
        },
        "tags": [
          "LoadBalancers"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0"
}