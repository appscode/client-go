syntax = "proto3";

package namespace;

import "google/api/annotations.proto";
import "api/dtypes/types.proto";

// no authentication required, but rate limited apis.
service Namespace {
  /*
  Creates a new namespace, if name is valid and no namespace with same name exists.
  */
  rpc Create(CreateRequest) returns (CreateResponse) {
	  option (google.api.http) = {
	    put: "/appscode/api/namespace/v0.1/{name}"
	    body: "*"
    };
  }

  /*
  Gets a namespace, if exists. This can be used to check existence of a namespace.
  */
  rpc Get(GetRequest) returns (GetResponse) {
	  option (google.api.http) = {
	    get: "/appscode/api/namespace/v0.1/{name}"
	  };
  }

  /*
  Check if a namespace name is available meaning name is valid and no namespace with same name exists.
  */
  rpc IsAvailable(IsAvailableRequest) returns (dtypes.VoidResponse) {
	  option (google.api.http) = {
	    get : "/appscode/api/namespace/v0.1/{name}/is-available"
    };
  }
}

message CreateRequest {
  string name = 1;
  string display_name = 2;
  string email = 3;
  string user_name = 4;
  string password = 5;
  repeated string invite_email = 6;
  string subscription_type = 7;
  string client_ip = 8;
}

message CreateResponse {
  dtypes.Status status = 1;
}

message GetRequest {
  string name = 1;
}

message GetResponse {
  dtypes.Status status = 1;
  string phid = 2;
}

message IsAvailableRequest {
  string name = 1;
}
